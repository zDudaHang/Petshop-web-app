import { Color } from 'csstype';
import { ColorScale } from '../colors';
export interface StatusColorMap extends ColorScale {
    main: Color;
    background: Color;
    onColor: Color;
}
export interface Pallete {
    text: {
        main: Color;
        secondary: Color;
        disabled: Color;
    };
    surface: {
        main: Color;
        background: Color;
    };
    divider: Color;
    primary: ColorScale & {
        main: Color;
    };
    status: {
        danger: StatusColorMap;
        success: StatusColorMap;
        info: StatusColorMap;
        alert: StatusColorMap;
    };
    highlight: Color;
    gray: ColorScale;
}
export interface PalleteConfig {
    grayScale?: ColorScale;
    primaryScale?: ColorScale;
    successScale?: ColorScale;
    dangerScale?: ColorScale;
    alertScale?: ColorScale;
    infoScale?: ColorScale;
    highlightScale?: ColorScale;
}
export declare const defaultConfig: PalleteConfig;
export declare const createPallete: (userConfig?: PalleteConfig) => Pallete;
export declare type TextColor = 'inherit' | 'normal' | 'secondary' | 'disabled' | 'primary' | 'danger' | 'success' | 'info' | 'alert';
export declare const textColorMap: {
    [key in TextColor]: (pallete: Pallete) => Color;
};
