"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateInput = void 0;
var react_1 = __importStar(require("react"));
var createAutoCorrectedDatePipe_1 = __importDefault(require("text-mask-addons/dist/createAutoCorrectedDatePipe"));
var i18n_1 = require("../../i18n");
var MaskedTextField_1 = require("../MaskedTextField");
var formatter = new Intl.DateTimeFormat('pt-br', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric',
});
function DateInput(props) {
    var value = props.value, onInputChange = props.onInputChange, onChange = props.onChange, transformTwoYearDigit = props.transformTwoYearDigit, rest = __rest(props, ["value", "onInputChange", "onChange", "transformTwoYearDigit"]);
    var locale = i18n_1.useLocale();
    var handleChange = react_1.useCallback(function (e) {
        if (!e || !e.target || !e.target.value) {
            onChange(null);
            return;
        }
        var targetValue = e.target.value;
        var match = targetValue.match(/^(\d{2})\/(\d{2})\/(\d{4})$/);
        if (match) {
            var date = new Date(parseInt(match[3], 10), parseInt(match[2], 10) - 1, parseInt(match[1], 10));
            onChange(date);
        }
        if (onInputChange) {
            return onInputChange(e);
        }
    }, [onChange, onInputChange]);
    var handleKeyDown = react_1.useCallback(function (e) {
        if (transformTwoYearDigit && e.key === 'Tab') {
            var targetAsInputElement = e.target;
            var match = targetAsInputElement.value.match(/^(\d{2})\/(\d{2})\/(\d{2}__)$/);
            if (match) {
                var yearPart = match[3];
                var yearPartClean = yearPart.substr(0, 2);
                var yearInTwoDigits = parseInt(yearPartClean, 10);
                var currentYearInTwoDigits = new Date().getFullYear() - 2000; // only works until 2100 :$
                var resultYear = yearInTwoDigits <= currentYearInTwoDigits ? "20" + yearPartClean : "19" + yearPartClean;
                var resultDate = new Date(parseInt(resultYear, 10), parseInt(match[2], 10) - 1, parseInt(match[1], 10));
                onChange(resultDate);
            }
        }
    }, [transformTwoYearDigit, onChange]);
    return (react_1.default.createElement(MaskedTextField_1.MaskedTextField, __assign({ value: value ? formatter.format(value) : null, mask: [/\d/, /\d/, '/', /\d/, /\d/, '/', /\d/, /\d/, /\d/, /\d/], placeholder: locale.dateInput.placeholder, pipe: createAutoCorrectedDatePipe_1.default('dd/mm/yyyy'), autoComplete: 'off', onChange: handleChange, onKeyDown: handleKeyDown }, rest)));
}
exports.DateInput = DateInput;
DateInput.defaultProps = {};
//# sourceMappingURL=DateInput.js.map