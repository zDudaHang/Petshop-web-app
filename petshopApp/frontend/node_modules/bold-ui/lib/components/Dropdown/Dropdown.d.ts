import { Options as PopperOptions } from '@popperjs/core';
import React from 'react';
import { Theme } from '../../styles';
import { DropdownMenuProps } from './DropdownMenu';
export interface DropdownProps extends DropdownMenuProps {
    /**
     * The anchor element that should receive the dropdown menu.
     */
    anchorRef: HTMLElement | null;
    /**
     * Whether the dropdown menu is open or not.
     * When dropdown is opened, it automatically attaches aria attributes to anchor element and focus first menu item.
     */
    open: boolean;
    /**
     * If true, the `onClose` callback is called when any menu item is clicked.
     */
    autoclose?: boolean;
    /**
     * Popper instance props.
     */
    popperProps?: Partial<PopperOptions>;
    children?: React.ReactNode;
    /**
     * Called whenever the dropdown wants to close itself.
     *
     * It may be called if:
     * - `Escape` button is pressed
     * - Focus go outside dropdown menu
     * - Clicked anywhere outside anchor and dropdown menu
     * - Any item is clicked and `autoclose` prop is `true`
     */
    onClose?(): void;
}
export declare function Dropdown(props: DropdownProps): JSX.Element;
export declare namespace Dropdown {
    var defaultProps: Partial<DropdownProps>;
}
export declare const createStyles: (theme: Theme) => {
    dropdown: {
        zIndex: number;
    };
};
