"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStyles = exports.Dropdown = void 0;
var react_1 = __importStar(require("react"));
var react_popper_1 = require("react-popper");
var useClickOutside_1 = require("../../hooks/useClickOutside");
var styles_1 = require("../../styles");
var string_1 = require("../../util/string");
var Portal_1 = require("../Portal");
var DropdownMenu_1 = require("./DropdownMenu");
function Dropdown(props) {
    var children = props.children, anchorRef = props.anchorRef, popperProps = props.popperProps, open = props.open, onClose = props.onClose, autoclose = props.autoclose, style = props.style, rest = __rest(props, ["children", "anchorRef", "popperProps", "open", "onClose", "autoclose", "style"]);
    var classes = styles_1.useStyles(exports.createStyles).classes;
    var _a = react_1.useState(), menuRef = _a[0], setMenuRef = _a[1];
    var _b = react_popper_1.usePopper(anchorRef, menuRef, popperProps), popperStyle = _b.styles.popper, placement = _b.attributes.placement;
    var dropdownIdRef = react_1.default.useRef("dropdown-" + string_1.randomStr());
    // Attaches aria attributes to anchor element
    react_1.useEffect(function () {
        if (anchorRef) {
            anchorRef.setAttribute('aria-haspopup', 'true');
            if (open) {
                anchorRef.setAttribute('aria-expanded', 'true');
                anchorRef.setAttribute('aria-controls', dropdownIdRef.current);
            }
            else {
                anchorRef.removeAttribute('aria-expanded');
                anchorRef.removeAttribute('aria-controls');
            }
        }
    }, [open, anchorRef]);
    // Attaches Escape key event
    react_1.useEffect(function () {
        var handleKeyDown = function (e) {
            if (open && e.key === 'Escape') {
                onClose();
            }
        };
        document.addEventListener('keydown', handleKeyDown);
        return function () { return document.removeEventListener('keydown', handleKeyDown); };
    }, [open, onClose]);
    // When opened, focus the first menu item
    var isFirstRender = react_1.useRef(true);
    react_1.useEffect(function () {
        if (isFirstRender.current) {
            isFirstRender.current = false;
            return;
        }
        if (open) {
            setTimeout(function () {
                // Delay focus to preserve window scroll position
                if (menuRef) {
                    var firstItem = menuRef.querySelector('[role="menuitem"]:not([aria-disabled="true"])');
                    if (firstItem) {
                        firstItem.focus();
                    }
                }
            });
        }
    }, [open, menuRef]);
    // Call onClose if target focus is outside menu
    var handleBlur = react_1.useCallback(function () {
        setTimeout(function () {
            if (menuRef) {
                var currentFocus = menuRef.ownerDocument.activeElement;
                if (!menuRef.contains(currentFocus)) {
                    onClose();
                }
            }
        });
    }, [onClose, menuRef]);
    // Call `onClose` when clicked outside dropdown and anchor
    useClickOutside_1.useClickOutside([anchorRef, menuRef], function () {
        if (open) {
            onClose();
        }
    });
    var handleMenuClick = react_1.useCallback(function () {
        if (autoclose) {
            onClose();
        }
    }, [autoclose, onClose]);
    return (open && (react_1.default.createElement(Portal_1.Portal, null,
        react_1.default.createElement(DropdownMenu_1.DropdownMenu, __assign({ id: dropdownIdRef.current, innerRef: setMenuRef, style: [popperStyle, classes.dropdown, style], "data-placement": placement, onClick: handleMenuClick, onBlur: handleBlur }, rest), children))));
}
exports.Dropdown = Dropdown;
Dropdown.defaultProps = {
    autoclose: true,
    onClose: function () { return null; },
};
exports.createStyles = function (theme) { return ({
    dropdown: {
        zIndex: theme.zIndex.dropdown,
    },
}); };
//# sourceMappingURL=Dropdown.js.map