"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultColumnStyles = exports.DataTableDefault = exports.DataTable = void 0;
var react_1 = __importDefault(require("react"));
var styles_1 = require("../../../styles");
var Table_1 = require("../Table");
var TableFilledBody_1 = require("./TableFilledBody");
function DataTable(props) {
    var css = styles_1.useCss().css;
    var getColumn = function (columnName) {
        return props.columns.find(function (col) { return col.name === columnName; });
    };
    var getHeaderProps = function (column) {
        var col = typeof column === 'string' ? getColumn(column) : column;
        if (!col) {
            throw new Error("Column '" + column + "' not found.");
        }
        var name = col.name, sortable = col.sortable, style = col.style;
        return {
            key: name,
            'data-name': name,
            sortable: sortable,
            sortDirection: getSortDirection(col),
            onSortChange: handleSortChange(col),
            style: css(exports.defaultColumnStyles(col), style),
        };
    };
    var handleSortChange = function (col) { return function (sortDirection, shiftKey) {
        if (shiftKey) {
            props.onSortChange(changeSort(props.sort, col.name, sortDirection));
        }
        else {
            props.onSortChange([sortDirection === 'ASC' ? col.name : "-" + col.name]);
        }
    }; };
    var getSortDirection = function (col) {
        var sorts = props.sort || [];
        var name = col.name;
        for (var _i = 0, sorts_1 = sorts; _i < sorts_1.length; _i++) {
            var sort = sorts_1[_i];
            if (sort === name) {
                return 'ASC';
            }
            else if (sort === "-" + name) {
                return 'DESC';
            }
        }
        return null;
    };
    return (react_1.default.createElement(react_1.default.Fragment, null, props.render(__assign(__assign({}, props), { getHeaderProps: getHeaderProps,
        getColumn: getColumn }))));
}
exports.DataTable = DataTable;
DataTable.defaultProps = {
    loading: false,
    sort: null,
    onSortChange: function () { return null; },
    render: function (renderProps) { return react_1.default.createElement(DataTableDefault, __assign({}, renderProps)); },
    onRowClick: null,
    hovered: true,
};
function DataTableDefault(props) {
    var columns = props.columns, rows = props.rows, loading = props.loading, onSortChange = props.onSortChange, sort = props.sort, getHeaderProps = props.getHeaderProps, getColumn = props.getColumn, render = props.render, onRowClick = props.onRowClick, rest = __rest(props, ["columns", "rows", "loading", "onSortChange", "sort", "getHeaderProps", "getColumn", "render", "onRowClick"]);
    return (react_1.default.createElement(Table_1.Table, __assign({}, rest),
        react_1.default.createElement(Table_1.TableHead, null,
            react_1.default.createElement(Table_1.TableRow, null, columns.map(function (col) { return (react_1.default.createElement(Table_1.TableHeader, __assign({ key: col.name }, getHeaderProps(col)), col.header)); }))),
        react_1.default.createElement(TableFilledBody_1.TableFilledBody, { rows: rows, columns: columns, loading: loading, onRowClick: onRowClick })));
}
exports.DataTableDefault = DataTableDefault;
var changeSort = function (sort, name, dir) {
    var newSort = dir === 'ASC' ? name : "-" + name;
    var swap = false;
    var newArray = sort.map(function (s) {
        if (s === name || s === "-" + name) {
            swap = true;
            return newSort;
        }
        return s;
    });
    return swap ? newArray : __spreadArrays(newArray, [newSort]);
};
exports.defaultColumnStyles = function (col) { return ({
    textAlign: col.align,
}); };
//# sourceMappingURL=DataTable.js.map