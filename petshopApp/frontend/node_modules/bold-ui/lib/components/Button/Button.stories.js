"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var addon_actions_1 = require("@storybook/addon-actions");
var addon_knobs_1 = require("@storybook/addon-knobs");
var react_1 = require("@storybook/react");
var react_2 = __importDefault(require("react"));
var Icon_1 = require("../Icon");
var Button_1 = require("./Button/Button");
var typeOptions = ['normal', 'primary', 'danger'];
var skinOptions = ['default', 'ghost', 'outline'];
var sizeOptions = ['small', 'medium', 'large'];
react_1.storiesOf('Components|Button', module)
    .add('default', function () { return (react_2.default.createElement(Button_1.Button, { skin: addon_knobs_1.select('skin', skinOptions, 'default'), size: addon_knobs_1.select('size', sizeOptions, 'medium'), kind: addon_knobs_1.select('kind', typeOptions, 'normal'), loading: addon_knobs_1.boolean('loading', false), disabled: addon_knobs_1.boolean('disabled', false), block: addon_knobs_1.boolean('block', false), onClick: addon_actions_1.action('button-clicked') }, addon_knobs_1.text('children', 'Button'))); })
    .add('icon', function () { return (react_2.default.createElement(Button_1.Button, { skin: addon_knobs_1.select('skin', skinOptions, 'ghost'), size: addon_knobs_1.select('size', sizeOptions, 'small'), kind: addon_knobs_1.select('kind', typeOptions, 'normal'), loading: addon_knobs_1.boolean('loading', false), disabled: addon_knobs_1.boolean('disabled', false), block: addon_knobs_1.boolean('block', false), onClick: addon_actions_1.action('button-clicked') },
    react_2.default.createElement(Icon_1.Icon, { icon: 'adjust' }))); })
    .add('link - <a> tag', function () {
    var ButtonLink = function (props) { return (react_2.default.createElement(Button_1.Button, __assign({ component: 'a' }, props))); };
    return (react_2.default.createElement(ButtonLink, { href: 'https://bold.bridge.ufsc.br', component: 'a', target: '_blank', skin: addon_knobs_1.select('skin', skinOptions, 'ghost'), size: addon_knobs_1.select('size', sizeOptions, 'small'), kind: addon_knobs_1.select('kind', typeOptions, 'normal'), loading: addon_knobs_1.boolean('loading', false), disabled: addon_knobs_1.boolean('disabled', false), block: addon_knobs_1.boolean('block', false), onClick: addon_actions_1.action('button-clicked') }, "This is a link"));
});
//# sourceMappingURL=Button.stories.js.map