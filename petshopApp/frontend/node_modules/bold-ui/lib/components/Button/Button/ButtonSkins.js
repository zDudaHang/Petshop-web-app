"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSizeStyles = exports.createBaseStyles = exports.skinMap = void 0;
var default_1 = require("./skins/default");
var ghost_1 = require("./skins/ghost");
var outline_1 = require("./skins/outline");
exports.skinMap = {
    default: default_1.createStyles,
    ghost: ghost_1.createStyles,
    outline: outline_1.createStyles,
};
exports.createBaseStyles = function (theme) { return ({
    button: __assign(__assign({}, theme.typography.variant('main')), { display: 'inline-flex', justifyContent: 'center', lineHeight: '1.5rem', position: 'relative', userSelect: 'none', transition: 'all .2s', fontWeight: 'bold', cursor: 'pointer', '& > span': {
            alignItems: 'center',
            display: 'inline-flex',
        } }),
    disabled: {
        cursor: 'not-allowed',
        opacity: 0.5,
    },
    loading: {
        span: {
            color: 'transparent',
        },
        ':after': {
            animation: theme.animation.spinAround + " 500ms infinite linear",
            border: '3px solid currentColor',
            borderRadius: '50%',
            borderRightColor: 'transparent',
            borderTopColor: 'transparent',
            content: '""',
            display: 'block',
            height: '1.5em',
            width: '1.5em',
            position: 'absolute',
            left: 'calc(50% - (1.5em / 2))',
            top: 'calc(50% - (1.5em / 2))',
        },
    },
    block: {
        width: '100%',
    },
}); };
exports.createSizeStyles = function (theme) { return ({
    large: {
        padding: 'calc(1.25rem - 1px) 1.5rem',
        fontSize: theme.typography.sizes.button,
    },
    medium: {
        fontSize: theme.typography.sizes.button,
        padding: 'calc(0.75rem - 1px) 1rem',
    },
    small: {
        fontSize: theme.typography.sizes.button,
        padding: 'calc(0.25rem - 1px) calc(0.5rem - 1px)',
    },
}); };
//# sourceMappingURL=ButtonSkins.js.map