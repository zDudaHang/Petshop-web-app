"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextArea = void 0;
var react_1 = __importDefault(require("react"));
var useFormControl_1 = require("../../hooks/useFormControl");
var styles_1 = require("../../styles");
var FormControl_1 = require("../FormControl");
var TextInputBase_1 = require("../TextField/TextInputBase");
function TextArea(props) {
    var style = props.style, label = props.label, error = props.error, rest = __rest(props, ["style", "label", "error"]);
    var valueLength = props.value && typeof props.value === 'string' && props.value.length;
    var defaultValueLength = props.defaultValue && typeof props.defaultValue === 'string' && props.defaultValue.length;
    var currentLength = valueLength || defaultValueLength || 0;
    var _a = useFormControl_1.useFormControl(props), getFormControlProps = _a.getFormControlProps, getInputProps = _a.getInputProps;
    var inputProps = getInputProps();
    var invalid = inputProps['aria-invalid'];
    var _b = styles_1.useStyles(createStyles, { invalid: invalid }), classes = _b.classes, css = _b.css;
    var className = css(classes.input, invalid && classes.invalid, style);
    return (react_1.default.createElement(FormControl_1.FormControl, __assign({}, getFormControlProps()),
        react_1.default.createElement("textarea", __assign({ className: className }, inputProps, rest)),
        props.maxLength && (react_1.default.createElement("div", { className: classes.counter },
            currentLength,
            "/",
            props.maxLength,
            " caracteres"))));
}
exports.TextArea = TextArea;
var createStyles = function (theme, _a) {
    var invalid = _a.invalid;
    return (__assign(__assign({}, TextInputBase_1.createStyles(theme)), { counter: {
            textAlign: 'right',
            color: invalid && theme.pallete.status.danger.main,
        } }));
};
//# sourceMappingURL=TextArea.js.map