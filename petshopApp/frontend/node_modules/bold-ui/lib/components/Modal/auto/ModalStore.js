"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModalStore = void 0;
var Observable_1 = require("../../../util/Observable");
var ModalStore = /** @class */ (function (_super) {
    __extends(ModalStore, _super);
    function ModalStore() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = {
            items: [],
        };
        return _this;
    }
    ModalStore.prototype.notify = function (value) {
        if (process.env.NODE_ENV === 'development' && this.listeners.length === 0) {
            console.warn("No listeners to the modal store change. " +
                "Maybe you need to include a <ModalMountTarget /> in your application.");
        }
        _super.prototype.notify.call(this, value);
    };
    ModalStore.prototype.append = function (render) {
        var key = Math.random()
            .toString(36)
            .substring(2);
        var component = render({
            dispose: this.dispose(key),
        });
        this.value = __assign(__assign({}, this.value), { items: __spreadArrays(this.value.items, [{ key: key, component: component }]) });
        this.notify(this.value);
        return key;
    };
    ModalStore.prototype.dispose = function (key) {
        var _this = this;
        return function () {
            _this.value = __assign(__assign({}, _this.value), { items: _this.value.items.filter(function (item) { return item.key !== key; }) });
            _this.notify(_this.value);
        };
    };
    return ModalStore;
}(Observable_1.Observable));
exports.ModalStore = ModalStore;
exports.default = new ModalStore();
//# sourceMappingURL=ModalStore.js.map