"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Text = void 0;
var react_1 = __importDefault(require("react"));
var styles_1 = require("../../styles");
var createTheme_1 = require("../../styles/theme/createTheme");
function Text(props) {
    var component = props.component, variant = props.variant, color = props.color, fontSize = props.fontSize, fontWeight = props.fontWeight, fontStyle = props.fontStyle, textDecoration = props.textDecoration, style = props.style, rest = __rest(props, ["component", "variant", "color", "fontSize", "fontWeight", "fontStyle", "textDecoration", "style"]);
    var _a = styles_1.useStyles(createStyles, props), classes = _a.classes, css = _a.css;
    var Cmp = component;
    var className = css(classes.root, color && classes.color, fontSize && classes.fontSize, fontWeight && classes.fontWeight, fontStyle && classes.fontStyle, textDecoration && classes.textDecoration, style);
    return react_1.default.createElement(Cmp, __assign({ className: className }, rest));
}
exports.Text = Text;
Text.defaultProps = {
    component: 'span',
    variant: 'main',
};
var createStyles = function (theme, _a) {
    var variant = _a.variant, color = _a.color, fontWeight = _a.fontWeight, fontStyle = _a.fontStyle, textDecoration = _a.textDecoration, fontSize = _a.fontSize;
    return ({
        root: __assign({}, theme.typography.variant(variant)),
        color: {
            color: color && createTheme_1.getTextColor(theme, color),
        },
        fontSize: {
            fontSize: fontSize && fontSize + "rem",
        },
        fontWeight: {
            fontWeight: fontWeight,
        },
        fontStyle: {
            fontStyle: fontStyle,
        },
        textDecoration: {
            textDecoration: textDecoration,
        },
    });
};
//# sourceMappingURL=Text.js.map