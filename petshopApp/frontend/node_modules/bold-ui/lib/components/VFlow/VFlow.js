"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VFlow = void 0;
var react_1 = __importDefault(require("react"));
var styles_1 = require("../../styles");
function VFlow(props) {
    var vSpacing = props.vSpacing, style = props.style, children = props.children, rest = __rest(props, ["vSpacing", "style", "children"]);
    var _a = styles_1.useStyles(createStyles, props), classes = _a.classes, css = _a.css;
    return (react_1.default.createElement("div", __assign({ className: css(classes.container, style) }, rest), react_1.default.Children.map(children, function (child) { return (react_1.default.createElement("div", { className: classes.childWrapper }, child)); })));
}
exports.VFlow = VFlow;
VFlow.defaultProps = {
    vSpacing: 1,
};
var createStyles = function (theme, _a) {
    var vSpacing = _a.vSpacing;
    return ({
        container: {
            display: 'flex',
            flexDirection: 'column',
        },
        childWrapper: {
            display: 'inline-block',
            marginBottom: vSpacing / 2 + "rem",
            marginTop: vSpacing / 2 + "rem",
            ':first-of-type': {
                marginTop: 0,
            },
            ':last-of-type': {
                marginBottom: 0,
            },
            ':empty': {
                display: 'none',
            },
        },
    });
};
//# sourceMappingURL=VFlow.js.map