import React from 'react';
import { ClassNames, ExternalStyles, Theme } from '../../styles';
import { Omit } from '../../util';
import { InputProps } from '../Input';
export interface CheckboxProps extends Omit<InputProps, 'style'> {
    label?: React.ReactNode;
    style?: ExternalStyles;
    indeterminate?: boolean;
}
export declare function Checkbox(props: CheckboxProps): JSX.Element;
export declare const createStyles: (theme: Theme) => {
    wrapper: React.CSSProperties;
    check: React.CSSProperties;
    label: React.CSSProperties;
    disabled: React.CSSProperties;
};
export declare const createInputStyles: (theme: Theme, classes: ClassNames<'check' | 'label'>) => {
    input: {
        [x: string]: number | {
            borderColor: string;
            backgroundColor?: undefined;
            ':after'?: undefined;
            boxShadow?: undefined;
            opacity?: undefined;
            cursor?: undefined;
            color?: undefined;
        } | {
            backgroundColor: string;
            borderColor: string;
            ':after': {
                content: string;
                borderRight: string;
                borderBottom: string;
                position: string;
                width: number;
                height: number;
                top: number;
                left: number;
                opacity: number;
                transform: string;
                transition: string;
            };
            boxShadow?: undefined;
            opacity?: undefined;
            cursor?: undefined;
            color?: undefined;
        } | {
            backgroundColor: string;
            borderColor: string;
            ':after': {
                content: string;
                borderBottom: string;
                position: string;
                top: number;
                left: number;
                width: number;
                height: number;
                opacity: number;
                transition: string;
                borderRight?: undefined;
                transform?: undefined;
            };
            boxShadow?: undefined;
            opacity?: undefined;
            cursor?: undefined;
            color?: undefined;
        } | {
            boxShadow: string;
            borderColor?: undefined;
            backgroundColor?: undefined;
            ':after'?: undefined;
            opacity?: undefined;
            cursor?: undefined;
            color?: undefined;
        } | {
            opacity: number;
            cursor: string;
            borderColor?: undefined;
            backgroundColor?: undefined;
            ':after'?: undefined;
            boxShadow?: undefined;
            color?: undefined;
        } | {
            color: string;
            cursor: string;
            borderColor?: undefined;
            backgroundColor?: undefined;
            ':after'?: undefined;
            boxShadow?: undefined;
            opacity?: undefined;
        };
        opacity: number;
        marginRight: number;
    };
};
