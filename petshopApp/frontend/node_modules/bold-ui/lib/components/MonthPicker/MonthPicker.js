"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStyles = exports.MonthPicker = void 0;
var emotion_1 = require("emotion");
var react_1 = __importStar(require("react"));
var i18n_1 = require("../../i18n");
var styles_1 = require("../../styles");
var locale_1 = require("../../util/locale");
var Button_1 = require("../Button");
var Icon_1 = require("../Icon");
var Text_1 = require("../Text");
function MonthPicker(props) {
    var year = props.year, formatter = props.formatter, onChange = props.onChange;
    var classes = styles_1.useStyles(exports.createStyles).classes;
    var locale = i18n_1.useLocale();
    var _a = react_1.useState(year || new Date().getFullYear()), visibleYear = _a[0], setVisibleYear = _a[1];
    react_1.useEffect(function () {
        setVisibleYear(year || new Date().getFullYear());
    }, [year]);
    var onLeftClick = function () { return setVisibleYear(function (currYear) { return currYear - 1; }); };
    var onRightClick = function () { return setVisibleYear(function (currYear) { return currYear + 1; }); };
    var onMonthClick = function (month) { return function () {
        onChange({ month: month, year: visibleYear });
    }; };
    var baseYearDate = new Date(visibleYear, 1, 1, 0, 0, 0, 0);
    var yearFormatter = new Intl.DateTimeFormat(locale_1.getUserLocale(), { year: 'numeric' });
    var monthNames = locale_1.getMonthNames(locale_1.getUserLocale(), formatter);
    return (react_1.default.createElement("div", { className: classes.container },
        react_1.default.createElement("div", { className: classes.months },
            react_1.default.createElement("div", { className: classes.item },
                react_1.default.createElement(Button_1.Button, { title: locale.calendar.previousYear, size: 'small', skin: 'ghost', onClick: onLeftClick },
                    react_1.default.createElement(Icon_1.Icon, { icon: 'angleLeft' }))),
            react_1.default.createElement("div", { className: classes.item },
                react_1.default.createElement(Text_1.Text, { fontWeight: 'bold', fontSize: 0.875 }, yearFormatter.format(baseYearDate))),
            react_1.default.createElement("div", { className: classes.item },
                react_1.default.createElement(Button_1.Button, { title: locale.calendar.nextYear, size: 'small', skin: 'ghost', onClick: onRightClick },
                    react_1.default.createElement(Icon_1.Icon, { icon: 'angleRight' }))),
            monthNames.map(function (month, index) { return (react_1.default.createElement("div", { key: index, className: classes.item },
                react_1.default.createElement(Button_1.Button, { title: month.long, onClick: onMonthClick(index), skin: 'ghost', style: emotion_1.css(classes.button, index === props.month && props.year === visibleYear && classes.active) }, month.short))); }))));
}
exports.MonthPicker = MonthPicker;
exports.createStyles = function (theme) { return ({
    container: {
        backgroundColor: theme.pallete.surface.main,
        display: 'inline-block',
        padding: '1rem',
        border: "1px solid " + theme.pallete.divider,
        boxShadow: theme.shadows.outer['20'],
        borderRadius: theme.radius.popper,
    },
    header: {
        padding: '0rem 1.5rem 0rem 1rem',
    },
    months: {
        margin: '-0.25rem -0.25rem',
        display: 'grid',
        gridTemplateColumns: 'repeat(3, 1fr)',
        alignItems: 'center',
    },
    item: {
        textAlign: 'center',
        margin: '0.25rem 0.25rem',
    },
    button: {
        padding: 'calc(0.25rem - 1px) 1rem',
        transitionProperty: 'background',
        minWidth: '70px',
    },
    active: {
        background: theme.pallete.primary.main + ' !important',
        color: theme.pallete.surface.main,
    },
}); };
//# sourceMappingURL=MonthPicker.js.map