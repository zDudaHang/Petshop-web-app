"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var addon_actions_1 = require("@storybook/addon-actions");
var addon_knobs_1 = require("@storybook/addon-knobs");
var react_1 = require("@storybook/react");
var react_2 = __importDefault(require("react"));
var Calendar_1 = require("./Calendar");
var util_1 = require("./util");
var isCurrentWeek = function (day) {
    var week = util_1.createWeekArray(new Date());
    return week.find(function (d) { return util_1.isSameDay(d, day); }) !== undefined;
};
var isToday = function (day) { return util_1.isSameDay(new Date(), day); };
var isOddDay = function (day) { return day.getDate() % 2 === 1; };
react_1.storiesOf('Components|Calendar', module)
    .add('default', function () { return (react_2.default.createElement(Calendar_1.Calendar, { visibleDate: new Date(addon_knobs_1.date('visibleDate', new Date())), onVisibleDateChange: addon_actions_1.action('onVisibleDateChange'), onDayClick: addon_actions_1.action('onDayClick'), onDayHover: addon_actions_1.action('onDayHover'), modifiers: {
        selected: isToday,
    } })); })
    .add('disabled dates', function () { return (react_2.default.createElement(Calendar_1.Calendar, { visibleDate: new Date(addon_knobs_1.date('visibleDate', new Date())), onVisibleDateChange: addon_actions_1.action('onVisibleDateChange'), onDayClick: addon_actions_1.action('onDayClick'), onDayHover: addon_actions_1.action('onDayHover'), modifiers: {
        disabled: function (day) { return !isCurrentWeek(day); },
    } })); })
    .add('custom modifier', function () { return (react_2.default.createElement(Calendar_1.Calendar, { visibleDate: new Date(addon_knobs_1.date('visibleDate', new Date())), onVisibleDateChange: addon_actions_1.action('onVisibleDateChange'), onDayClick: addon_actions_1.action('onDayClick'), onDayHover: addon_actions_1.action('onDayHover'), modifiers: {
        oddDays: isOddDay,
    }, modifierStyles: {
        today: function () { return ({ background: 'pink' }); },
        oddDays: function () { return ({ color: 'red', fontWeight: 'bold' }); },
    } })); });
//# sourceMappingURL=Calendar.stories.js.map