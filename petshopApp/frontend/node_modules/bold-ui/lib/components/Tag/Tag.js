"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tag = void 0;
var react_1 = __importDefault(require("react"));
var styles_1 = require("../../styles");
var Icon_1 = require("../Icon");
function Tag(props) {
    var type = props.type, style = props.style, children = props.children, icon = props.icon, removable = props.removable, onRemove = props.onRemove, rest = __rest(props, ["type", "style", "children", "icon", "removable", "onRemove"]);
    var _a = styles_1.useStyles(createStyles), classes = _a.classes, css = _a.css;
    return (react_1.default.createElement("span", __assign({ className: css(classes.tag, classes[type], style) }, rest),
        icon && react_1.default.createElement(Icon_1.Icon, { icon: icon, style: classes.icon }),
        children,
        removable && react_1.default.createElement(Icon_1.Icon, { icon: 'timesDefault', style: classes.removeIcon, onClick: onRemove })));
}
exports.Tag = Tag;
Tag.defaultProps = {
    type: 'normal',
    onRemove: function () { return null; },
};
var createStyles = function (theme) { return ({
    tag: {
        display: 'inline-flex',
        alignItems: 'center',
        padding: '0.25rem 0.5rem',
        fontWeight: 'bold',
        borderRadius: theme.radius.tag,
        whiteSpace: 'nowrap',
        lineHeight: '1rem',
        fontSize: theme.typography.sizes.text,
    },
    icon: {
        fontSize: '1rem',
        marginRight: '0.25rem',
    },
    removeIcon: {
        fontSize: '1rem',
        marginLeft: '0.125rem',
        '&:hover': {
            cursor: 'pointer',
            color: theme.pallete.status.danger.main,
        },
    },
    normal: {
        background: theme.pallete.gray.c80,
    },
    danger: {
        background: theme.pallete.status.danger.main,
        color: theme.pallete.status.danger.onColor,
    },
    info: {
        background: theme.pallete.status.info.main,
        color: theme.pallete.status.info.onColor,
    },
    success: {
        background: theme.pallete.status.success.main,
        color: theme.pallete.status.success.onColor,
    },
    alert: {
        background: theme.pallete.status.alert.main,
        color: theme.pallete.status.alert.onColor,
    },
}); };
//# sourceMappingURL=Tag.js.map