"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InputWrapper = void 0;
var react_1 = __importDefault(require("react"));
var i18n_1 = require("../../i18n");
var styles_1 = require("../../styles");
var Button_1 = require("../Button");
var Icon_1 = require("../Icon/Icon");
function InputWrapper(props) {
    var children = props.children, icon = props.icon, iconDisabled = props.iconDisabled, onIconClick = props.onIconClick, clearVisible = props.clearVisible, onClear = props.onClear;
    var iconPosition = props.iconPosition || (props.onIconClick ? 'right' : 'left');
    var _a = styles_1.useStyles(createStyles, { icon: icon, iconPosition: iconPosition, clearVisible: clearVisible, onIconClick: onIconClick }), classes = _a.classes, css = _a.css;
    var locale = i18n_1.useLocale();
    var iconBoxClasses = css(classes.iconWrapper, iconPosition === 'left' && classes.iconLeft, iconPosition === 'right' && classes.iconRight);
    return (react_1.default.createElement("div", { className: classes.wrapper },
        children,
        clearVisible && (react_1.default.createElement("span", { role: 'button', title: locale.input.clear, tabIndex: -1, onClick: onClear, className: classes.clearButton },
            react_1.default.createElement(Icon_1.Icon, { size: 1.5, icon: 'timesDefault' }))),
        icon && (react_1.default.createElement("span", { className: iconBoxClasses }, onIconClick ? (react_1.default.createElement(Button_1.Button, { size: 'small', skin: 'ghost', tabIndex: -1, onClick: onIconClick, style: classes.icon, disabled: iconDisabled },
            react_1.default.createElement(Icon_1.Icon, { icon: icon }))) : (react_1.default.createElement(Icon_1.Icon, { icon: icon, style: classes.icon }))))));
}
exports.InputWrapper = InputWrapper;
InputWrapper.defaultProps = {
    iconDisabled: false,
    clearVisible: false,
    onClear: function () { return null; },
};
var createStyles = function (theme, _a) {
    var icon = _a.icon, iconPosition = _a.iconPosition, clearVisible = _a.clearVisible, onIconClick = _a.onIconClick;
    var paddingLeft = (icon && iconPosition === 'left' && onIconClick && '3rem') ||
        (icon && iconPosition === 'left' && '2.5rem') ||
        undefined;
    var paddingRight = (icon && iconPosition === 'right' && clearVisible && onIconClick && '4.5rem') ||
        (icon && iconPosition === 'right' && clearVisible && '4rem') ||
        (icon && iconPosition === 'right' && onIconClick && '3rem') ||
        (icon && iconPosition === 'right' && '2.5rem') ||
        (clearVisible && '2rem') ||
        undefined;
    return {
        wrapper: {
            position: 'relative',
            input: {
                paddingLeft: paddingLeft,
                paddingRight: paddingRight,
            },
        },
        clearButton: {
            position: 'absolute',
            right: icon && iconPosition === 'right' ? (onIconClick && '2.5rem') || '2rem' : 1,
            background: 'transparent',
            border: 'none',
            cursor: 'pointer',
            height: '100%',
            display: 'inline-flex',
            justifyContent: 'center',
            alignItems: 'center',
            outline: 0,
            color: theme.pallete.text.secondary,
            padding: '1px 6px',
            '&:hover': {
                color: theme.pallete.status.danger.main,
            },
        },
        iconWrapper: {
            position: 'absolute',
            backgroundColor: onIconClick ? theme.pallete.gray.c90 : 'transparent',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            padding: '0.25rem',
            width: '2.5rem',
            top: 1,
            bottom: 1,
        },
        iconLeft: {
            left: 1,
        },
        iconRight: {
            right: 1,
        },
        icon: {
            borderRadius: 'inherit',
            '&:focus': {
                boxShadow: 'none',
            },
        },
    };
};
//# sourceMappingURL=InputWrapper.js.map