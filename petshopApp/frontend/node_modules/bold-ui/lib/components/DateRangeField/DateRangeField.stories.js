"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var addon_actions_1 = require("@storybook/addon-actions");
var addon_knobs_1 = require("@storybook/addon-knobs");
var react_1 = require("@storybook/react");
var react_2 = __importDefault(require("react"));
var DateRangeField_1 = require("./DateRangeField");
var todayMinus10 = new Date(new Date().setDate(new Date().getDate() - 10));
var period = { startDate: todayMinus10, endDate: new Date() };
react_1.storiesOf('Components|DateRangeField ', module)
    .add('default', function () { return (react_2.default.createElement(DateRangeField_1.DateRangeField, { clearable: addon_knobs_1.boolean('clearable', true), label: addon_knobs_1.text('label', 'Text label'), disabled: addon_knobs_1.boolean('disabled', false), error: addon_knobs_1.text('error', ''), required: addon_knobs_1.boolean('required', true), onChange: addon_actions_1.action('changed'), icon: 'calendarOutline', value: period })); })
    .add('min/max date', function () { return (react_2.default.createElement(DateRangeField_1.DateRangeField, { clearable: addon_knobs_1.boolean('clearable', true), label: addon_knobs_1.text('label', 'Text label'), disabled: addon_knobs_1.boolean('disabled', false), error: addon_knobs_1.text('error', ''), required: addon_knobs_1.boolean('required', true), onChange: addon_actions_1.action('changed'), icon: 'calendarOutline', minDate: todayMinus10, maxDate: new Date() })); });
//# sourceMappingURL=DateRangeField.stories.js.map