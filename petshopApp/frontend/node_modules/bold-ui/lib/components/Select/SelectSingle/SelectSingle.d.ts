import { UseFormControlProps } from '../../../hooks/useFormControl';
import { Omit } from '../../../util';
import { TextInputProps } from '../../TextField';
import { SelectDownshiftProps } from './SelectDownshift';
import { SelectDownshiftMenuProps } from './SelectDownshiftMenu';
export interface DefaultItemType {
    value: any;
    label: string;
}
export interface SelectSingleProps<T = DefaultItemType> extends Omit<TextInputProps, 'value' | 'onChange'>, UseFormControlProps {
    value?: T;
    items: SelectDownshiftProps<T>['items'];
    itemToString: SelectDownshiftProps<T>['itemToString'];
    onChange?: SelectDownshiftProps<T>['onChange'];
    isOpen?: SelectDownshiftProps<T>['isOpen'];
    menuMinWidth?: SelectDownshiftProps<T>['menuMinWidth'];
    openOnFocus?: SelectDownshiftProps<T>['openOnFocus'];
    onFilterChange?: SelectDownshiftProps<T>['onFilterChange'];
    createNewItem?: SelectDownshiftProps<T>['createNewItem'];
    loading?: SelectDownshiftMenuProps<T>['loading'];
    renderItem?: SelectDownshiftMenuProps<T>['renderItem'];
    components?: SelectDownshiftMenuProps<T>['components'];
    popperProps?: SelectDownshiftMenuProps<T>['popperProps'];
}
export declare function SelectSingle<T>(props: SelectSingleProps<T>): JSX.Element;
