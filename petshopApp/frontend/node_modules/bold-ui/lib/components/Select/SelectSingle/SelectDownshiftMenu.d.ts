import { ControllerStateAndHelpers } from 'downshift';
import React from 'react';
import { PopperProps } from 'react-popper';
import { Theme } from '../../../styles';
export interface SelectDownshiftMenuProps<T> {
    items: T[];
    loading: boolean;
    menuMinWidth?: number;
    downshift: ControllerStateAndHelpers<T>;
    anchorRef: React.RefObject<HTMLElement>;
    createNewItem?: boolean;
    components?: Partial<SelectMenuComponents<T>>;
    popperProps?: Omit<Partial<PopperProps<any>>, 'children'>;
    /**
     * Render function used by each select item.
     * @param item The select item to be rendered.
     * @returns A react node to be rendered inside the `SelectMenuItem`
     */
    renderItem?(item: T): React.ReactNode;
}
export interface SelectMenuComponents<T> {
    /**
     * Item shown when `creteNewItem` prop is indicated.
     */
    CreateItem: React.ComponentType<SelectDownshiftMenuProps<T>>;
    /**
     * Item shown when `loading` prop is true.
     */
    LoadingItem: React.ComponentType<SelectDownshiftMenuProps<T>>;
    /**
     * Item shown when `items` array prop is empty.
     */
    EmptyItem: React.ComponentType<SelectDownshiftMenuProps<T>>;
    /**
     * Default item component used for each element in `items` prop.
     */
    Item: React.ComponentType<SelectDownshiftMenuProps<T> & {
        item: T;
        index: number;
    }>;
    /**
     * A custom item to be included at the beginning of the select list.
     */
    PrependItem: React.ComponentType<SelectDownshiftMenuProps<T>>;
    /**
     * A custom item to be included at the end of the select list.
     */
    AppendItem: React.ComponentType<SelectDownshiftMenuProps<T>>;
}
export declare function SelectDownshiftMenu<T>(props: SelectDownshiftMenuProps<T>): JSX.Element;
export declare namespace SelectDownshiftMenu {
    var defaultProps: Partial<SelectDownshiftMenuProps<any>>;
}
export declare const defaultComponents: SelectMenuComponents<any>;
export declare function SelectDownshiftComponentCustom(props: React.HTMLAttributes<HTMLDivElement>): JSX.Element;
export declare const createStyles: (theme: Theme) => {
    menu: React.CSSProperties;
    list: React.CSSProperties;
};
