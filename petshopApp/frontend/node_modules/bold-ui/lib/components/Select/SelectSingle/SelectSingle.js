"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelectSingle = void 0;
var react_1 = __importStar(require("react"));
var useFormControl_1 = require("../../../hooks/useFormControl");
var styles_1 = require("../../../styles");
var react_2 = require("../../../util/react");
var FormControl_1 = require("../../FormControl");
var TextField_1 = require("../../TextField");
var SelectDownshift_1 = require("./SelectDownshift");
var SelectDownshiftMenu_1 = require("./SelectDownshiftMenu");
function SelectSingle(props) {
    var value = props.value, items = props.items, itemToString = props.itemToString, onChange = props.onChange, isOpen = props.isOpen, menuMinWidth = props.menuMinWidth, openOnFocus = props.openOnFocus, onFilterChange = props.onFilterChange, createNewItem = props.createNewItem, popperProps = props.popperProps, loading = props.loading, renderItem = props.renderItem, components = props.components, style = props.style, label = props.label, error = props.error, inputRef = props.inputRef, rest = __rest(props, ["value", "items", "itemToString", "onChange", "isOpen", "menuMinWidth", "openOnFocus", "onFilterChange", "createNewItem", "popperProps", "loading", "renderItem", "components", "style", "label", "error", "inputRef"]);
    var internalInputRef = react_1.useRef();
    var css = styles_1.useStyles().css;
    var _a = useFormControl_1.useFormControl(props), getFormControlProps = _a.getFormControlProps, getFormControlInputProps = _a.getInputProps;
    var formControlProps = getFormControlProps();
    var inputProps = getFormControlInputProps();
    var invalid = inputProps['aria-invalid'];
    var handleInputIconClick = react_1.useCallback(function (isOpen) { return function () {
        if (!isOpen) {
            internalInputRef.current.focus();
        }
    }; }, []);
    return (react_1.default.createElement(FormControl_1.FormControl, __assign({}, formControlProps),
        react_1.default.createElement(SelectDownshift_1.SelectDownshift, { selectedItem: value || null, items: items, itemToString: itemToString, onChange: onChange, isOpen: isOpen, openOnFocus: openOnFocus, onFilterChange: onFilterChange, createNewItem: createNewItem, labelId: formControlProps.labelId }, function (downshift) {
            var downshiftOpen = downshift.isOpen, getInputProps = downshift.getInputProps, visibleItems = downshift.visibleItems, inputValue = downshift.inputValue, openMenu = downshift.openMenu, toggleMenu = downshift.toggleMenu, clearSelection = downshift.clearSelection;
            var downshiftInputProps = getInputProps({
                onBlur: react_2.composeHandlers(props.onBlur),
                onFocus: react_2.composeHandlers(openMenu, props.onFocus),
                onClick: react_2.composeHandlers(openMenu, props.onClick),
            });
            return (react_1.default.createElement("div", { className: css(style) },
                react_1.default.createElement("div", null,
                    react_1.default.createElement(TextField_1.TextInput, __assign({ icon: downshiftOpen ? 'angleUp' : 'angleDown', onIconClick: react_2.composeHandlers(toggleMenu, handleInputIconClick(downshiftOpen), props.onIconClick), onClear: react_2.composeHandlers(clearSelection, props.onClear), invalid: invalid }, rest, downshiftInputProps, inputProps, { inputRef: react_2.composeRefs(internalInputRef, inputRef), value: inputValue ? inputValue : '' }))),
                react_1.default.createElement(SelectDownshiftMenu_1.SelectDownshiftMenu, { popperProps: popperProps, anchorRef: internalInputRef, menuMinWidth: menuMinWidth, downshift: downshift, items: visibleItems, loading: loading, renderItem: renderItem, components: components, createNewItem: !!createNewItem })));
        })));
}
exports.SelectSingle = SelectSingle;
//# sourceMappingURL=SelectSingle.js.map