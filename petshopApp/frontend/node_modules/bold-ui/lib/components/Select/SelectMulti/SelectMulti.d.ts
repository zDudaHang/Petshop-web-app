import { UseFormControlProps } from '../../../hooks/useFormControl';
import { Omit } from '../../../util';
import { DefaultItemType } from '../SelectSingle';
import { SelectDownshiftMenuProps } from '../SelectSingle/SelectDownshiftMenu';
import { MultiDownshiftProps } from './MultiDownshift';
import { SelectMultiInputProps } from './SelectMultiInput';
export interface SelectMultiProps<T = DefaultItemType> extends Omit<SelectMultiInputProps<T>, 'renderItem' | 'value' | 'onChange' | 'onRemoveItem'>, UseFormControlProps {
    value?: T[];
    clearable?: boolean;
    items: MultiDownshiftProps<T>['items'];
    itemToString: MultiDownshiftProps<T>['itemToString'];
    onChange?: MultiDownshiftProps<T>['onChange'];
    isOpen?: MultiDownshiftProps<T>['isOpen'];
    itemIsEqual?: MultiDownshiftProps<T>['itemIsEqual'];
    onFilterChange?: MultiDownshiftProps<T>['onFilterChange'];
    loading?: SelectDownshiftMenuProps<T>['loading'];
    renderItem?: SelectDownshiftMenuProps<T>['renderItem'];
    components?: SelectDownshiftMenuProps<T>['components'];
    popperProps?: SelectDownshiftMenuProps<T>['popperProps'];
}
export declare function SelectMulti<T>(props: SelectMultiProps<T>): JSX.Element;
