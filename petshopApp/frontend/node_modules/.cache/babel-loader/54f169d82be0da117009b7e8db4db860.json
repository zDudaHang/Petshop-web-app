{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/CreateUserView.tsx\";\nimport React from \"react\";\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from \"../../graphql/mutations\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form } from \"react-final-form\";\nimport { css } from \"@emotion/core\";\nimport { RadioFieldAdapter, TextFieldAdapter } from \"../Adapters\";\nexport function CreateUserView() {\n  const [newUser, {\n    data: user\n  }] = useMutation(CREATE_USER);\n\n  function handleSubmit({\n    username,\n    password,\n    userType,\n    name,\n    salary\n  }) {\n    console.log(parseFloat(salary)); // newUser({variables: {\n    //     username: username,\n    //     password: password,\n    //     isAdmin: (userType === \"isAdmin\" ? true : false),\n    //     isVet: (userType === \"isVet\" ? true : false),\n    //     name: name,\n    //     salary: parseFloat(salary)\n    // }})\n  }\n\n  const renderForm = props => {\n    return /*#__PURE__*/React.createElement(VFlow, {\n      vSpacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, (user === null || user === void 0 ? void 0 : user.newUser) && /*#__PURE__*/React.createElement(Alert, {\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"Funcion\\xE1rio adicionado com sucesso !\"), /*#__PURE__*/React.createElement(Heading, {\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Adicionando um novo(a) funcion\\xE1rio(a)\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      wrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: TextFieldAdapter,\n      name: \"username\",\n      label: \"Usu\\xE1rio\",\n      placeholder: \"Nome de Usu\\xE1rio\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: TextFieldAdapter,\n      name: \"password\",\n      required: true,\n      label: \"Senha\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: TextFieldAdapter,\n      name: \"salary\",\n      required: true,\n      label: \"Sal\\xE1rio\",\n      type: \"float\",\n      placeholder: \"Exemplo: 1500,50\",\n      min: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(HFlow, {\n      justifyContent: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: RadioFieldAdapter,\n      name: \"userType\",\n      value: \"isVet\",\n      required: true,\n      label: \"Veterin\\xE1rio\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      component: RadioFieldAdapter,\n      name: \"userType\",\n      value: \"isAdmin\",\n      required: true,\n      label: \"Administrador\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Cell, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(HFlow, {\n      justifyContent: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"reset\",\n      kind: \"normal\",\n      size: \"small\",\n      onClick: props.form.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, \"Limpar\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      kind: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"Enviar\"))))));\n  };\n\n  return /*#__PURE__*/React.createElement(HFlow, {\n    style: css`margin: 1rem`,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: renderForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/CreateUserView.tsx"],"names":["React","useMutation","CREATE_USER","Alert","Button","Cell","Grid","Heading","HFlow","VFlow","Field","Form","css","RadioFieldAdapter","TextFieldAdapter","CreateUserView","newUser","data","user","handleSubmit","username","password","userType","name","salary","console","log","parseFloat","renderForm","props","form","reset"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from \"../../graphql/mutations\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form, FormRenderProps } from \"react-final-form\";\nimport { css } from \"@emotion/core\";\nimport { RadioFieldAdapter, TextFieldAdapter } from \"../Adapters\";\nimport { CreateUserResult } from \"../../types/User\";\n\nexport function CreateUserView() {\n\n    const [newUser, {data:user}] = useMutation<CreateUserResult>(CREATE_USER)\n\n    function handleSubmit({username, password, userType, name, salary}: any) {\n        console.log(parseFloat(salary))\n        // newUser({variables: {\n        //     username: username,\n        //     password: password,\n        //     isAdmin: (userType === \"isAdmin\" ? true : false),\n        //     isVet: (userType === \"isVet\" ? true : false),\n        //     name: name,\n        //     salary: parseFloat(salary)\n        // }})\n    }\n\n    const renderForm = (props: FormRenderProps) => {\n        return (\n            <VFlow vSpacing={1}>\n                {user?.newUser &&\n                    <Alert type='success'>\n                        Funcionário adicionado com sucesso !\n                    </Alert>\n                }\n                <Heading level={1}>\n                    Adicionando um novo(a) funcionário(a)\n                </Heading>\n                <form onSubmit={props.handleSubmit}>\n                    <Grid wrap>\n                        <Cell xs={6}>\n                            <Field\n                                component={TextFieldAdapter}\n                                name=\"username\"\n                                label=\"Usuário\"\n                                placeholder=\"Nome de Usuário\"\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={TextFieldAdapter}\n                                name=\"password\"\n                                required\n                                label=\"Senha\"\n                                type=\"password\"\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={TextFieldAdapter}\n                                name=\"salary\"\n                                required\n                                label=\"Salário\"\n                                type=\"float\"\n                                placeholder=\"Exemplo: 1500,50\"\n                                min={0}\n                            />\n                        </Cell>\n                        <Cell xs={12}>\n                            <HFlow justifyContent=\"flex-start\">\n                                <Field\n                                    component={RadioFieldAdapter}\n                                    name=\"userType\"\n                                    value=\"isVet\"\n                                    required\n                                    label=\"Veterinário\"\n                                    type=\"radio\"\n                                />\n                                <Field\n                                    component={RadioFieldAdapter}\n                                    name=\"userType\"\n                                    value=\"isAdmin\"\n                                    required\n                                    label=\"Administrador\"\n                                    type=\"radio\"\n                                />\n                            </HFlow>\n                        </Cell>\n                        <Cell xs={12}>\n                            <HFlow justifyContent=\"flex-start\">\n                                <Button type=\"reset\" kind=\"normal\" size=\"small\" onClick={props.form.reset}>\n                                    Limpar\n                                </Button>\n                                <Button type=\"submit\" kind=\"primary\" size=\"small\">\n                                    Enviar\n                                </Button>\n                            </HFlow>\n                        </Cell>\n                    </Grid>\n                </form>\n            </VFlow>\n        )\n    }\n\n    return (\n        <HFlow style={css`margin: 1rem`} justifyContent=\"center\">\n            <Form\n                onSubmit={handleSubmit}\n                render={renderForm}\n            />\n        </HFlow>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}