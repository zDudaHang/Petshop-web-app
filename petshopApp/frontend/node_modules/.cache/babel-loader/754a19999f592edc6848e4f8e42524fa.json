{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/CreatePetView.tsx\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_PET } from \"../../graphql/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CUSTOMER } from \"../../graphql/queries\";\nimport { Field, Form } from \"react-final-form\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { MaskedTextFieldAdapter, TextFieldAdapter } from '../Adapters';\nimport { ErrorView } from '../ErrorView';\nexport function CreatePetView() {\n  const {\n    ownerId\n  } = useParams();\n  const {\n    loading,\n    data: owner\n  } = useQuery(CUSTOMER, {\n    variables: {\n      id: ownerId\n    }\n  });\n  const [newPet, {\n    data: pet\n  }] = useMutation(CREATE_PET);\n\n  function handleSubmit({\n    name,\n    birthdate\n  }) {\n    newPet({\n      variables: {\n        name: name,\n        birthDate: birthdate,\n        ownerId: ownerId\n      }\n    });\n  }\n\n  const renderForm = props => {\n    return jsx(VFlow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, (pet === null || pet === void 0 ? void 0 : pet.newPet) && jsx(Alert, {\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"Pet criado com sucesso !\"), jsx(Heading, {\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Criando um pet para o(a) \", owner === null || owner === void 0 ? void 0 : owner.customer.name), jsx(\"form\", {\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, jsx(Grid, {\n      wrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, jsx(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, jsx(Field, {\n      component: TextFieldAdapter,\n      name: \"name\",\n      label: \"Nome\",\n      placeholder: \"Nome do Pet\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), jsx(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, jsx(Field, {\n      component: MaskedTextFieldAdapter,\n      name: \"birthdate\",\n      guide: true,\n      required: true,\n      label: \"Data de Anivers\\xE1rio\",\n      mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/],\n      placeholder: \"dd/mm/aaaa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    })), jsx(Cell, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, jsx(HFlow, {\n      justifyContent: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, jsx(Button, {\n      type: \"reset\",\n      kind: \"normal\",\n      size: \"small\",\n      onClick: props.form.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, \"Limpar\"), jsx(Button, {\n      type: \"submit\",\n      kind: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, \"Enviar\"))))));\n  };\n\n  if (loading) {\n    return jsx(VFlow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, jsx(Heading, {\n      style: {\n        textAlign: 'center'\n      },\n      color: \"normal\",\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Carregando...\"));\n  } else {\n    return jsx(HFlow, {\n      style: css`margin: 1rem`,\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, owner ? jsx(Form, {\n      onSubmit: handleSubmit,\n      render: renderForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }) : jsx(ErrorView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/CreatePetView.tsx"],"names":["css","jsx","useMutation","CREATE_PET","useParams","useQuery","CUSTOMER","Field","Form","Alert","Button","Cell","Grid","Heading","HFlow","VFlow","MaskedTextFieldAdapter","TextFieldAdapter","ErrorView","CreatePetView","ownerId","loading","data","owner","variables","id","newPet","pet","handleSubmit","name","birthdate","birthDate","renderForm","props","customer","form","reset","textAlign"],"mappings":";;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA6C,kBAA7C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,OAApC,EAA6CC,KAA7C,EAAoDC,KAApD,QAAiE,SAAjE;AACA,SAASC,sBAAT,EAAiCC,gBAAjC,QAAyD,aAAzD;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,SAASC,aAAT,GAAyB;AAE5B,QAAM;AAACC,IAAAA;AAAD,MAAYhB,SAAS,EAA3B;AAEA,QAAM;AAACiB,IAAAA,OAAD;AAAUC,IAAAA,IAAI,EAAEC;AAAhB,MAAyBlB,QAAQ,CAAiBC,QAAjB,EAA2B;AAC9DkB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEL;AAAN;AADmD,GAA3B,CAAvC;AAIA,QAAM,CAACM,MAAD,EAAS;AAACJ,IAAAA,IAAI,EAACK;AAAN,GAAT,IAAuBzB,WAAW,CAAkBC,UAAlB,CAAxC;;AAEA,WAASyB,YAAT,CAAsB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAtB,EAA8C;AAC1CJ,IAAAA,MAAM,CAAC;AAACF,MAAAA,SAAS,EAAE;AAACK,QAAAA,IAAI,EAAEA,IAAP;AAAaE,QAAAA,SAAS,EAAED,SAAxB;AAAmCV,QAAAA,OAAO,EAAEA;AAA5C;AAAZ,KAAD,CAAN;AACH;;AAED,QAAMY,UAAU,GAAIC,KAAD,IAA4B;AAC3C,WACI,IAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAAN,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAED,MAAL,KACG,IAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFR,EAMI,IAAC,OAAD;AAAS,MAAA,KAAK,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAC8BH,KAD9B,aAC8BA,KAD9B,uBAC8BA,KAAK,CAAEW,QAAP,CAAgBL,IAD9C,CANJ,EASI;AAAM,MAAA,QAAQ,EAAEI,KAAK,CAACL,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,KAAD;AACI,MAAA,SAAS,EAAEX,gBADf;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,WAAW,EAAC,aAJhB;AAKI,MAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAUI,IAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,KAAD;AACI,MAAA,SAAS,EAAED,sBADf;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,MAHT;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,KAAK,EAAC,wBALV;AAMI,MAAA,IAAI,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,GAAX,EAAe,IAAf,EAAoB,IAApB,EAAyB,GAAzB,EAA6B,IAA7B,EAAkC,IAAlC,EAAuC,IAAvC,EAA4C,IAA5C,CANV;AAOI,MAAA,WAAW,EAAC,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAqBI,IAAC,IAAD;AAAM,MAAA,EAAE,EAAE,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,KAAD;AAAO,MAAA,cAAc,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,IAAI,EAAC,OAAxC;AAAgD,MAAA,OAAO,EAAEiB,KAAK,CAACE,IAAN,CAAWC,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,IAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,SAA3B;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,CArBJ,CADJ,CATJ,CADJ;AA8CH,GA/CD;;AAiDA,MAAIf,OAAJ,EAAa;AACT,WACI,IAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAACgB,QAAAA,SAAS,EAAE;AAAZ,OAAhB;AAAuC,MAAA,KAAK,EAAC,QAA7C;AAAsD,MAAA,KAAK,EAAE,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAOH,GARD,MAQO;AACH,WACI,IAAC,KAAD;AAAO,MAAA,KAAK,EAAErC,GAAI,cAAlB;AAAiC,MAAA,cAAc,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKuB,KAAK,GACF,IAAC,IAAD;AACI,MAAA,QAAQ,EAAEK,YADd;AAEI,MAAA,MAAM,EAAEI,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,GAKF,IAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CADJ;AAWH;AACJ","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport { useMutation } from '@apollo/client';\nimport { CREATE_PET } from \"../../graphql/mutations\";\nimport { CreatePetResult } from \"../../types/Pet\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CustomerResult } from \"../../types/Customer\";\nimport { CUSTOMER } from \"../../graphql/queries\";\nimport { Field, Form, FormRenderProps } from \"react-final-form\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { MaskedTextFieldAdapter, TextFieldAdapter } from '../Adapters';\nimport { ErrorView } from '../ErrorView';\n\nexport function CreatePetView() {\n\n    const {ownerId} = useParams<{ownerId: string}>();\n\n    const {loading, data: owner} = useQuery<CustomerResult>(CUSTOMER, {\n        variables: { id: ownerId }\n    })\n\n    const [newPet, {data:pet}] = useMutation<CreatePetResult>(CREATE_PET);\n\n    function handleSubmit({name, birthdate}: any) {\n        newPet({variables: {name: name, birthDate: birthdate, ownerId: ownerId}})\n    }\n\n    const renderForm = (props: FormRenderProps) => {\n        return (\n            <VFlow>\n                {pet?.newPet &&\n                    <Alert type='success'>\n                        Pet criado com sucesso !\n                    </Alert>\n                }\n                <Heading level={1}>\n                    Criando um pet para o(a) {owner?.customer.name}\n                </Heading>\n                <form onSubmit={props.handleSubmit}>\n                    <Grid wrap>\n                        <Cell xs={6}>\n                            <Field\n                                component={TextFieldAdapter}\n                                name=\"name\"\n                                label=\"Nome\"\n                                placeholder=\"Nome do Pet\"\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={MaskedTextFieldAdapter}\n                                name=\"birthdate\"\n                                guide\n                                required\n                                label=\"Data de Aniversário\" \n                                mask={[/\\d/,/\\d/,'/',/\\d/,/\\d/,'/',/\\d/,/\\d/,/\\d/,/\\d/]}\n                                placeholder=\"dd/mm/aaaa\"\n                            />\n                        </Cell>\n                        <Cell xs={12}>\n                            <HFlow justifyContent=\"flex-start\">\n                                <Button type=\"reset\" kind=\"normal\" size=\"small\" onClick={props.form.reset}>\n                                    Limpar\n                                </Button>\n                                <Button type=\"submit\" kind=\"primary\" size=\"small\">\n                                    Enviar\n                                </Button>\n                            </HFlow>\n                        </Cell>\n                    </Grid>\n                </form>\n            </VFlow>\n        )\n    }\n\n    if (loading) {\n        return (\n            <VFlow>\n                <Heading style={{textAlign: 'center'}} color=\"normal\" level={1}>\n                    Carregando...\n                </Heading>\n            </VFlow>\n        );\n    } else {\n        return (\n            <HFlow style={css`margin: 1rem`} justifyContent=\"center\">\n                {owner  ? \n                    <Form\n                        onSubmit={handleSubmit}\n                        render={renderForm}/>\n                :\n                    <ErrorView/>\n                }\n            </HFlow>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}