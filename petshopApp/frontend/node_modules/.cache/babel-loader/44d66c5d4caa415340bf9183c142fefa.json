{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/ListPetsView.tsx\";\nimport React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { useParams } from \"react-router-dom\";\nimport { CUSTOMER, CUSTOMER_PETS } from \"../../graphql/queries\";\nimport { Heading, HFlow, Table, TableBody, TableHead, TableHeader, TableRow, VFlow } from \"bold-ui\";\nimport { TablePetView } from \"./TablePetView\";\nimport { css } from \"@emotion/core\";\nimport { ErrorView } from \"../Infos/ErrorView\";\nexport function ListPetsView() {\n  const {\n    ownerId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(CUSTOMER_PETS, {\n    variables: {\n      id: ownerId\n    }\n  });\n  const {\n    data: owner\n  } = useQuery(CUSTOMER, {\n    variables: {\n      id: ownerId\n    }\n  });\n\n  if ((data === null || data === void 0 ? void 0 : data.customerPets) && (owner === null || owner === void 0 ? void 0 : owner.customer)) {\n    if (data.customerPets.length > 0) {\n      return /*#__PURE__*/React.createElement(VFlow, {\n        style: css`margin-top: 1rem`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        style: css`text-align: center`,\n        color: \"normal\",\n        level: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, \"Pets do(a) \", owner.customer.name), /*#__PURE__*/React.createElement(HFlow, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 37\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }\n      }, \"Nome\"), /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 37\n        }\n      }, \"Data de nascimento\"), /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, data.customerPets.map(p => {\n        return /*#__PURE__*/React.createElement(TablePetView, {\n          key: p.id,\n          pet: p,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }\n        });\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(VFlow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        style: css`text-align: center`,\n        color: \"normal\",\n        level: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, owner.customer.name, \" n\\xE3o tem pets\"));\n    }\n  } else {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(VFlow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        style: css`text-align: center`,\n        color: \"normal\",\n        level: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, \"Carregando...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(ErrorView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/ListPetsView.tsx"],"names":["React","useQuery","useParams","CUSTOMER","CUSTOMER_PETS","Heading","HFlow","Table","TableBody","TableHead","TableHeader","TableRow","VFlow","TablePetView","css","ErrorView","ListPetsView","ownerId","loading","data","variables","id","owner","customerPets","customer","length","name","map","p"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CustomerPetsResult } from \"../../types/Pet\";\nimport { useQuery } from '@apollo/client';\nimport { useParams } from \"react-router-dom\";\nimport { CUSTOMER, CUSTOMER_PETS } from \"../../graphql/queries\";\nimport { CustomerResult } from \"../../types/Customer\";\nimport { Heading, HFlow, Table, TableBody, TableHead, TableHeader, TableRow, VFlow } from \"bold-ui\";\nimport { TablePetView } from \"./TablePetView\";\nimport { css } from \"@emotion/core\";\nimport { ErrorView } from \"../Infos/ErrorView\";\n\nexport function ListPetsView() {\n\n    const { ownerId } = useParams<{ownerId: string}>();\n\n    const { loading, data } = useQuery<CustomerPetsResult>(CUSTOMER_PETS, {\n        variables: { id: ownerId }\n    });\n\n    const { data:owner } = useQuery<CustomerResult>(CUSTOMER, {\n        variables: { id: ownerId }\n    });\n\n    if (data?.customerPets && owner?.customer) {\n        if (data.customerPets.length > 0) {\n            return (\n                <VFlow style={css`margin-top: 1rem`}>\n                    <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                        Pets do(a) {owner.customer.name}\n                    </Heading>\n                    <HFlow alignItems=\"center\" justifyContent=\"center\">\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableHeader>ID</TableHeader>\n                                    <TableHeader>Nome</TableHeader>\n                                    <TableHeader>Data de nascimento</TableHeader>\n                                    {/* <TableHeader>Esp√©cie</TableHeader> */}\n                                    <TableHeader></TableHeader>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.customerPets.map( (p) => {\n                                    return (\n                                        <TablePetView key={p.id} pet={p}/>\n                                    )\n                                }) }\n                            </TableBody>\n                        </Table>\n                    </HFlow>\n                </VFlow>\n            );\n        } else {\n            return (\n                <VFlow>\n                    <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                        {owner.customer.name} n√£o tem pets\n                    </Heading>\n                </VFlow>\n            );\n        }\n    } else {\n        if (loading) {\n            return (\n                <VFlow>\n                    <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                        Carregando...\n                    </Heading>\n                </VFlow>\n            );\n        }\n        return (\n            <ErrorView/>\n        )\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}