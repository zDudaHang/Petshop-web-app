{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/ListUserView.tsx\";\nimport React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { USERS } from \"../../graphql/queries\";\nimport { Heading, HFlow, Table, TableBody, TableHead, TableHeader, TableRow, VFlow } from \"bold-ui\";\nimport { css } from \"@emotion/core\";\nimport { UserView } from \"./UserView\";\nimport { ErrorView } from \"../ErrorView\";\nexport function ListUserView() {\n  const {\n    loading,\n    data\n  } = useQuery(USERS);\n\n  if (data === null || data === void 0 ? void 0 : data.users) {\n    if (data.users.length > 0) {\n      return /*#__PURE__*/React.createElement(VFlow, {\n        style: css`margin-top: 1rem`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        style: css`text-align: center`,\n        color: \"normal\",\n        level: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, \"Lista de usu\\xE1rios\"), /*#__PURE__*/React.createElement(HFlow, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 37\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, \"Usu\\xE1rio\"), /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }\n      }, \"Fun\\xE7\\xE3o\"))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }, data.users.map(u => {\n        return /*#__PURE__*/React.createElement(UserView, {\n          user: u,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 41\n          }\n        });\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(VFlow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        style: css`text-align: center`,\n        color: \"normal\",\n        level: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"N\\xE3o h\\xE1 usu\\xE1rios :(\"));\n    }\n  } else {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(VFlow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        style: css`text-align: center`,\n        color: \"normal\",\n        level: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Carregando...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(ErrorView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/ListUserView.tsx"],"names":["React","useQuery","USERS","Heading","HFlow","Table","TableBody","TableHead","TableHeader","TableRow","VFlow","css","UserView","ErrorView","ListUserView","loading","data","users","length","map","u"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,SAAhC,EAA2CC,SAA3C,EAAsDC,WAAtD,EAAmEC,QAAnE,EAA6EC,KAA7E,QAA0F,SAA1F;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,SAASC,YAAT,GAAwB;AAE3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBf,QAAQ,CAAcC,KAAd,CAAlC;;AAEA,MAAIc,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,KAAV,EAAiB;AACb,QAAID,IAAI,CAACC,KAAL,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACvB,0BACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEP,GAAI,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,GAAI,oBAApB;AAAyC,QAAA,KAAK,EAAC,QAA/C;AAAwD,QAAA,KAAK,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAII,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAC,QAAlB;AAA2B,QAAA,cAAc,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADJ,CADJ,eASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKK,IAAI,CAACC,KAAL,CAAWE,GAAX,CAAiBC,CAAD,IAAO;AACpB,4BACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJA,CADL,CATJ,CADJ,CAJJ,CADJ;AA0BH,KA3BD,MA2BO;AACH,0BACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAET,GAAI,oBAApB;AAAyC,QAAA,KAAK,EAAC,QAA/C;AAAwD,QAAA,KAAK,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CADJ;AAOH;AACJ,GArCD,MAqCO;AACH,QAAII,OAAJ,EAAa;AACT,0BACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEJ,GAAI,oBAApB;AAAyC,QAAA,KAAK,EAAC,QAA/C;AAAwD,QAAA,KAAK,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;AAOH;;AACD,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AAGJ","sourcesContent":["import React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { USERS } from \"../../graphql/queries\";\nimport { Heading, HFlow, Table, TableBody, TableHead, TableHeader, TableRow, VFlow } from \"bold-ui\";\nimport { css } from \"@emotion/core\";\nimport { UserView } from \"./UserView\";\nimport { UsersResult } from \"../../types/User\";\nimport { ErrorView } from \"../ErrorView\";\n\nexport function ListUserView() {\n\n    const { loading, data } = useQuery<UsersResult>(USERS);\n\n    if (data?.users) {\n        if (data.users.length > 0) {\n            return (\n                <VFlow style={css`margin-top: 1rem`}>\n                    <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                        Lista de usuários\n                    </Heading>\n                    <HFlow alignItems=\"center\" justifyContent=\"center\">\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableHeader>ID</TableHeader>\n                                    <TableHeader>Usuário</TableHeader>\n                                    {/* <TableHeader>Salário</TableHeader> */}\n                                    <TableHeader>Função</TableHeader>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.users.map( (u) => {\n                                    return (\n                                        <UserView user={u}/>\n                                    )\n                                }) }\n                            </TableBody>\n                        </Table>\n                    </HFlow>\n                </VFlow>\n            );\n        } else {\n            return (\n                <VFlow>\n                    <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                        Não há usuários :(\n                    </Heading>\n                </VFlow>\n            );\n        }\n    } else {\n        if (loading) {\n            return (\n                <VFlow>\n                    <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                        Carregando...\n                    </Heading>\n                </VFlow>\n            );\n        }\n        return (\n            <ErrorView/>\n        );\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}