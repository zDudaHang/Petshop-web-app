{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/Vet/AddApointmentView.tsx\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { css } from \"@emotion/core\";\nimport { Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport React from \"react\";\nimport { Field, Form } from \"react-final-form\";\nimport { PETS, VETS } from \"../../../graphql/queries\";\nimport { isValidHour } from \"../../../util/util\";\nimport { DatePickerAdapter, SelectAdapter, TimeFieldAdapter } from \"../../Adapters\";\nimport { LoadingView } from \"../../Infos/LoadingView\";\nexport function AddApointmentView() {\n  const {\n    loading: loadingVets,\n    data: vets\n  } = useQuery(VETS);\n  const {\n    loading: loadingPets,\n    data: pets\n  } = useQuery(PETS);\n\n  if (loadingVets) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      msg: \"Carregando os veterin\\xE1rios...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (loadingPets) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      msg: \"Carregando os pets...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    });\n  }\n\n  function handleSubmit(value) {\n    console.log(value.date);\n    const today = new Date(new Date().toDateString());\n    console.log(value.time);\n    console.log(isValidHour(value.time));\n  }\n\n  function itemToString(item) {\n    if (item) {\n      return `${item.name}`;\n    } else {\n      return \"\";\n    }\n  }\n\n  const renderForm = props => {\n    return /*#__PURE__*/React.createElement(VFlow, {\n      vSpacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Adicionando uma nova consulta\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      wrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: DatePickerAdapter,\n      name: \"date\",\n      label: \"Data da consulta\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: TimeFieldAdapter,\n      name: \"time\",\n      label: \"Hor\\xE1rio da consulta\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: SelectAdapter,\n      name: \"vet\",\n      label: \"Veterin\\xE1rio\",\n      items: vets === null || vets === void 0 ? void 0 : vets.vets,\n      itemToString: itemToString,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: SelectAdapter,\n      name: \"pet\",\n      label: \"Pet\",\n      items: pets === null || pets === void 0 ? void 0 : pets.pets,\n      itemToString: itemToString,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(HFlow, {\n      justifyContent: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"reset\",\n      kind: \"normal\",\n      size: \"small\",\n      onClick: props.form.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, \"Limpar\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      kind: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"Enviar\"))))));\n  };\n\n  return /*#__PURE__*/React.createElement(HFlow, {\n    style: css`margin: 1rem`,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: renderForm,\n    validate: values => {\n      const errors = {\n        date: undefined,\n        time: undefined\n      };\n\n      if (values.date < new Date(new Date().toDateString())) {\n        errors.date = 'A data precisa ser a partir de hoje !';\n      }\n\n      if (!isValidHour(values.time)) {\n        errors.time = 'O horÃ¡rio precisa ser vÃ¡lido';\n      }\n\n      return errors;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/Vet/AddApointmentView.tsx"],"names":["useQuery","css","Button","Cell","Grid","Heading","HFlow","VFlow","React","Field","Form","PETS","VETS","isValidHour","DatePickerAdapter","SelectAdapter","TimeFieldAdapter","LoadingView","AddApointmentView","loading","loadingVets","data","vets","loadingPets","pets","handleSubmit","value","console","log","date","today","Date","toDateString","time","itemToString","item","name","renderForm","props","form","reset","values","errors","undefined"],"mappings":"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","sourcesContent":["import { useQuery } from \"@apollo/react-hooks\";\nimport { css } from \"@emotion/core\";\nimport { Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport React, { useContext } from \"react\"\nimport { Field, Form, FormRenderProps } from \"react-final-form\";\nimport AuthContext from \"../../../AuthContext\";\nimport { PETS, VETS } from \"../../../graphql/queries\";\nimport { PetsResult } from \"../../../types/Pet\";\nimport { VetsResult } from \"../../../types/User\";\nimport { isValidHour } from \"../../../util/util\";\nimport { DatePickerAdapter, SelectAdapter, TimeFieldAdapter } from \"../../Adapters\";\nimport { LoadingView } from \"../../Infos/LoadingView\";\n\nexport function AddApointmentView() {\n\n    const { loading:loadingVets, data:vets } = useQuery<VetsResult>(VETS);\n\n    const { loading:loadingPets, data:pets } = useQuery<PetsResult>(PETS);\n    \n    if (loadingVets) {\n        return <LoadingView msg=\"Carregando os veterinÃ¡rios...\"/>\n    }\n\n    if (loadingPets) {\n        return <LoadingView msg=\"Carregando os pets...\"/>\n    }\n\n    function handleSubmit(value: any) {\n        console.log(value.date)\n        const today = new Date(new Date().toDateString())\n        console.log(value.time)\n        console.log(isValidHour(value.time))\n    }\n\n    function itemToString(item: any) {\n        if (item) {\n            return `${item.name}`\n        } else {\n            return \"\"\n        }\n    }\n\n\n    const renderForm = (props: FormRenderProps) => {\n        return (\n            <VFlow vSpacing={1}>\n                <Heading level={1}>\n                    Adicionando uma nova consulta\n                </Heading>\n                <form onSubmit={props.handleSubmit}>\n                    <Grid wrap>\n                        <Cell xs={6}>\n                            <Field\n                                component={DatePickerAdapter}\n                                name=\"date\"\n                                label=\"Data da consulta\"\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={TimeFieldAdapter}\n                                name=\"time\"\n                                label=\"HorÃ¡rio da consulta\"\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={SelectAdapter}\n                                name=\"vet\"\n                                label=\"VeterinÃ¡rio\" \n                                items={vets?.vets}\n                                itemToString={itemToString}\n                                required\n                            />\n                            </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={SelectAdapter}\n                                name=\"pet\"\n                                label=\"Pet\" \n                                items={pets?.pets}\n                                itemToString={itemToString}\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={12}>\n                            <HFlow justifyContent=\"flex-start\">\n                                <Button type=\"reset\" kind=\"normal\" size=\"small\" onClick={props.form.reset}>\n                                    Limpar\n                                </Button>\n                                <Button type=\"submit\" kind=\"primary\" size=\"small\">\n                                    Enviar\n                                </Button>\n                            </HFlow>\n                        </Cell>\n                    </Grid>\n                </form>\n            </VFlow>\n        )\n    }\n\n    return (\n        <HFlow style={css`margin: 1rem`} justifyContent=\"center\">\n            <Form\n                onSubmit={handleSubmit}\n                render={renderForm}\n                validate={values => {\n                    const errors: {date: String | undefined, time: String | undefined} = {date: undefined, time: undefined}\n                    if (values.date < new Date(new Date().toDateString())) {\n                        errors.date = 'A data precisa ser a partir de hoje !'\n                    }\n                    if (!isValidHour(values.time)) {\n                        errors.time = 'O horÃ¡rio precisa ser vÃ¡lido'\n                    }\n                    return errors;\n                }}\n            />\n        </HFlow>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}