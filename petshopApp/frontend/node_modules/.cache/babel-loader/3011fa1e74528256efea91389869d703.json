{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/UpdatePetView.tsx\";\nimport React from \"react\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UPDATE_PET } from \"../../graphql/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { PET } from \"../../graphql/queries\";\nimport { formatDate } from \"../../util/util\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form } from \"react-final-form\";\nimport { MaskedTextFieldAdapter, TextFieldAdapter } from \"../Adapters\";\nimport { css } from \"@emotion/core\";\nimport { ErrorView } from \"../Infos/ErrorView\";\nexport function UpdatePetView() {\n  const {\n    petId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(PET, {\n    variables: {\n      id: petId\n    }\n  });\n  const [updatePet, {\n    data: pet\n  }] = useMutation(UPDATE_PET);\n\n  function handleSubmit({\n    name\n  }) {\n    updatePet({\n      variables: {\n        id: petId,\n        newName: name\n      }\n    });\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(VFlow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      style: css`text-align: center`,\n      color: \"normal\",\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Carregando...\"));\n  }\n\n  if (data === null || data === void 0 ? void 0 : data.pet) {\n    const renderForm = props => {\n      return /*#__PURE__*/React.createElement(VFlow, {\n        vSpacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, (pet === null || pet === void 0 ? void 0 : pet.updatePet) && /*#__PURE__*/React.createElement(Alert, {\n        type: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, \"Pet alterado com sucesso !\"), /*#__PURE__*/React.createElement(Heading, {\n        level: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"Alterando os dados do(a) pet \", data.pet.name), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: props.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        wrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Cell, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        component: TextFieldAdapter,\n        name: \"name\",\n        label: \"Nome\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Cell, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        component: MaskedTextFieldAdapter,\n        disabled: true,\n        name: \"birthdate\",\n        guide: true,\n        required: true,\n        label: \"Data de Anivers\\xE1rio\",\n        mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/],\n        placeholder: \"dd/mm/aaaa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Cell, {\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(HFlow, {\n        justifyContent: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        kind: \"primary\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, \"Enviar\"))))));\n    };\n\n    return /*#__PURE__*/React.createElement(HFlow, {\n      style: css`margin: 1rem`,\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      initialValues: {\n        name: data.pet.name,\n        birthdate: formatDate(data.pet.birthDate)\n      },\n      render: renderForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(ErrorView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/UpdatePetView.tsx"],"names":["React","useQuery","useMutation","UPDATE_PET","useParams","PET","formatDate","Alert","Button","Cell","Grid","Heading","HFlow","VFlow","Field","Form","MaskedTextFieldAdapter","TextFieldAdapter","css","ErrorView","UpdatePetView","petId","loading","data","variables","id","updatePet","pet","handleSubmit","name","newName","renderForm","props","birthdate","birthDate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { PetResult, UpdatePetResult } from \"../../types/Pet\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UPDATE_PET } from \"../../graphql/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { PET } from \"../../graphql/queries\";\nimport { formatDate } from \"../../util/util\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form, FormRenderProps } from \"react-final-form\";\nimport { MaskedTextFieldAdapter, TextFieldAdapter } from \"../Adapters\";\nimport { css } from \"@emotion/core\";\nimport { ErrorView } from \"../Infos/ErrorView\";\n\nexport function UpdatePetView() {\n\n    const {petId} = useParams<{petId: string}>();\n\n    const { loading, data } = useQuery<PetResult>(PET, {\n        variables: { id: petId }\n    });\n\n    const [updatePet, {data:pet}] = useMutation<UpdatePetResult>(UPDATE_PET);\n\n\n    function handleSubmit({name}: any) {\n        updatePet({variables: {id: petId, newName: name}})\n    }\n\n    if (loading) {\n        return (\n            <VFlow>\n                <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                    Carregando...\n                </Heading>\n            </VFlow>\n        );\n    }\n\n    if (data?.pet) {\n        const renderForm = (props: FormRenderProps) => {\n            return (\n                <VFlow vSpacing={1}>\n                    {pet?.updatePet &&\n                        <Alert type='success'>\n                            Pet alterado com sucesso !\n                        </Alert>\n                    }\n                    <Heading level={1}>\n                        Alterando os dados do(a) pet {data.pet.name}\n                    </Heading>\n                    <form onSubmit={props.handleSubmit}>\n                        <Grid wrap>\n                            <Cell xs={6}>\n                                <Field\n                                    component={TextFieldAdapter}\n                                    name=\"name\"\n                                    label=\"Nome\"\n                                    required\n\n                                />\n                            </Cell>\n                            <Cell xs={6}>\n                                <Field\n                                    component={MaskedTextFieldAdapter}\n                                    disabled\n                                    name=\"birthdate\"\n                                    guide\n                                    required\n                                    label=\"Data de Aniversário\" \n                                    mask={[/\\d/,/\\d/,'/',/\\d/,/\\d/,'/',/\\d/,/\\d/,/\\d/,/\\d/]}\n                                    placeholder=\"dd/mm/aaaa\"\n                                />\n                            </Cell>\n                            <Cell xs={12}>\n                                <HFlow justifyContent=\"flex-start\">\n                                    <Button type=\"submit\" kind=\"primary\" size=\"small\">\n                                        Enviar\n                                    </Button>\n                                </HFlow>\n                            </Cell>\n                        </Grid>\n                    </form>\n                </VFlow>\n            )\n        }\n\n        return (\n            <HFlow style={css`margin: 1rem`} justifyContent=\"center\">\n                <Form\n                    onSubmit={handleSubmit}\n                    initialValues={ { name: data.pet.name , birthdate: formatDate(data.pet.birthDate) } }\n                    render={renderForm}\n                />\n            </HFlow>\n        );\n\n    } else {\n        return (\n            <ErrorView/>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}