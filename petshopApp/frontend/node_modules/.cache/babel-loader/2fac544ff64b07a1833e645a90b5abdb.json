{"ast":null,"code":"export function formatDate(date) {\n  let newDate = date.split('-');\n  return `${newDate[2]}/${newDate[1]}/${newDate[0]}`;\n}\nexport function isValidHour(time) {\n  if (time) {\n    const timeSplitted = time.split(':');\n    const hours = parseInt(timeSplitted[0]);\n    const minutes = parseInt(timeSplitted[1]);\n    return hours <= 23 && minutes <= 59;\n  }\n\n  return true;\n}\nexport function generateValidHours() {\n  const hours = [];\n\n  for (var i = 7; i < 24; i++) {\n    hours.push(`${i}:00`);\n    hours.push(`${i}:30`);\n  }\n\n  console.log(hours);\n  return hours;\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/util/util.tsx"],"names":["formatDate","date","newDate","split","isValidHour","time","timeSplitted","hours","parseInt","minutes","generateValidHours","i","push","console","log"],"mappings":"AAEA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0C;AAC7C,MAAIC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;AACA,SAAQ,GAAED,OAAO,CAAC,CAAD,CAAI,IAAGA,OAAO,CAAC,CAAD,CAAI,IAAGA,OAAO,CAAC,CAAD,CAAI,EAAjD;AACH;AAED,OAAO,SAASE,WAAT,CAAqBC,IAArB,EAA4C;AAC/C,MAAIA,IAAJ,EAAU;AACN,UAAMC,YAAY,GAAGD,IAAI,CAACF,KAAL,CAAW,GAAX,CAArB;AACA,UAAMI,KAAK,GAAGC,QAAQ,CAACF,YAAY,CAAC,CAAD,CAAb,CAAtB;AACA,UAAMG,OAAO,GAAGD,QAAQ,CAACF,YAAY,CAAC,CAAD,CAAb,CAAxB;AACA,WAAOC,KAAK,IAAI,EAAT,IAAeE,OAAO,IAAI,EAAjC;AACH;;AACD,SAAO,IAAP;AACH;AAED,OAAO,SAASC,kBAAT,GAAyC;AAC5C,QAAMH,KAAgB,GAAG,EAAzB;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBJ,IAAAA,KAAK,CAACK,IAAN,CAAY,GAAED,CAAE,KAAhB;AACAJ,IAAAA,KAAK,CAACK,IAAN,CAAY,GAAED,CAAE,KAAhB;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,SAAOA,KAAP;AACH","sourcesContent":["\n\nexport function formatDate(date: string): string {\n    let newDate = date.split('-');\n    return `${newDate[2]}/${newDate[1]}/${newDate[0]}`;\n}\n\nexport function isValidHour(time: string): boolean {\n    if (time) {\n        const timeSplitted = time.split(':')\n        const hours = parseInt(timeSplitted[0])\n        const minutes = parseInt(timeSplitted[1])\n        return hours <= 23 && minutes <= 59\n    }\n    return true\n}\n\nexport function generateValidHours() : string[] {\n    const hours : string[] = []\n    for (var i = 7; i < 24; i++) {\n        hours.push(`${i}:00`)\n        hours.push(`${i}:30`)\n    }\n    console.log(hours)\n    return hours\n}"]},"metadata":{},"sourceType":"module"}