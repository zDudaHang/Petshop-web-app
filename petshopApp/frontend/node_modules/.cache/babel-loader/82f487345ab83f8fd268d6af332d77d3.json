{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/Vet/AppointmentsView.tsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Button, Heading, HFlow, Icon, Table, TableBody, TableHead, TableHeader, TableRow, VFlow } from \"bold-ui\";\nimport { useParams } from \"react-router-dom\";\nimport { DAY_APPOINTMENT, USER } from \"../../../graphql/queries\";\nimport { css } from \"@emotion/core\";\nimport { ErrorView } from \"../../ErrorView\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nexport function AppointmentView() {\n  const {\n    userId\n  } = useParams();\n  const [actualDate, setActualDate] = useState(moment().format(\"DD/MM/YYYY\"));\n  const {\n    loading: loadingUser,\n    data: user\n  } = useQuery(USER, {\n    variables: {\n      id: userId\n    }\n  });\n  console.log(`Enviando a data : ${actualDate}`);\n  const {\n    loading: loadingAppointments,\n    data: appointments\n  } = useQuery(DAY_APPOINTMENT, {\n    variables: {\n      userId: userId,\n      date: actualDate\n    }\n  });\n  console.log(user);\n  console.log(appointments);\n\n  if (loadingUser || loadingAppointments) {\n    return /*#__PURE__*/React.createElement(VFlow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      style: css`text-align: center`,\n      color: \"normal\",\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Carregando...\"));\n  }\n\n  if (user && appointments) {\n    return /*#__PURE__*/React.createElement(VFlow, {\n      style: css`margin-top: 1rem`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      style: css`text-align: center`,\n      color: \"normal\",\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Consultas\"), /*#__PURE__*/React.createElement(HFlow, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      kind: \"normal\",\n      size: \"small\",\n      skin: \"ghost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: \"angleLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Heading, {\n      style: css`text-align: center`,\n      color: \"normal\",\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: actualDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      kind: \"normal\",\n      size: \"small\",\n      skin: \"ghost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: \"angleRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(HFlow, {\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(TableHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, \"Hor\\xE1rio\"), /*#__PURE__*/React.createElement(TableHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"Pet\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(ErrorView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/Vet/AppointmentsView.tsx"],"names":["React","useState","useQuery","Button","Heading","HFlow","Icon","Table","TableBody","TableHead","TableHeader","TableRow","VFlow","useParams","DAY_APPOINTMENT","USER","css","ErrorView","Moment","moment","AppointmentView","userId","actualDate","setActualDate","format","loading","loadingUser","data","user","variables","id","console","log","loadingAppointments","appointments","date"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Button, Heading, HFlow, Icon, Table, TableBody, TableHead, TableHeader, TableRow, VFlow } from \"bold-ui\";\nimport { useParams } from \"react-router-dom\";\nimport { DAY_APPOINTMENT, USER } from \"../../../graphql/queries\";\nimport { UserResult } from \"../../../types/User\";\nimport { css } from \"@emotion/core\";\nimport { ErrorView } from \"../../ErrorView\";\nimport Moment from \"react-moment\";\nimport { DayAppointmentsResult } from \"../../../types/Appointment\";\nimport moment from \"moment\";\n\nexport function AppointmentView() {\n\n    const { userId } = useParams<{userId: string}>();\n\n    const [actualDate, setActualDate] = useState(moment().format(\"DD/MM/YYYY\"))\n\n    const { loading:loadingUser, data:user } = useQuery<UserResult>(USER, {\n        variables: { id: userId }\n    });\n\n    console.log(`Enviando a data : ${actualDate}`)\n\n    const { loading:loadingAppointments, data:appointments } = useQuery<DayAppointmentsResult>(DAY_APPOINTMENT, {\n        variables: { userId: userId, date: actualDate }\n    });\n\n    console.log(user)\n    console.log(appointments)\n\n    if (loadingUser || loadingAppointments) {\n        return (\n            <VFlow>\n                <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                    Carregando...\n                </Heading>\n            </VFlow>\n        );\n    }\n\n    if (user && appointments) {\n        return (\n            <VFlow style={css`margin-top: 1rem`}>\n                <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                    Consultas\n                </Heading>\n                <HFlow alignItems=\"center\" justifyContent=\"center\">\n                    <Button kind=\"normal\" size=\"small\" skin=\"ghost\">\n                        <Icon icon=\"angleLeft\"/>\n                    </Button>\n                    <Heading style={css`text-align: center`} color=\"normal\" level={1}>\n                        <Moment date={actualDate}/>\n                    </Heading>\n                    <Button kind=\"normal\" size=\"small\" skin=\"ghost\">\n                        <Icon icon=\"angleRight\"/>\n                    </Button>\n                </HFlow>\n                <HFlow alignItems=\"center\">\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableHeader>ID</TableHeader>\n                                <TableHeader>Horário</TableHeader>\n                                <TableHeader>Pet</TableHeader>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        </TableBody>\n                    </Table>\n                </HFlow>\n            </VFlow>\n        )\n\n    } else {\n        return (\n            <ErrorView/>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}