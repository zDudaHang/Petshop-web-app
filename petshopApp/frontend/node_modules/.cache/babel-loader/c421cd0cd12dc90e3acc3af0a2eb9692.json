{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMonthNames = exports.getMonthShortFormat = exports.getUserLocale = exports.DEFAULT_LOCALE = void 0;\n\nvar string_1 = require(\"./string\");\n\nexports.DEFAULT_LOCALE = 'en';\n/**\n * Return the user locale based on browser's language.\n *\n * @returns The user locale.\n */\n\nexports.getUserLocale = function () {\n  if (typeof navigator !== 'undefined') {\n    return (navigator.languages || []).length ? navigator.languages[0] : navigator.language;\n  }\n\n  return exports.DEFAULT_LOCALE;\n};\n/**\n * Returns month in short format with the first capital letter based on browser's language.\n * EN: short format: Jan\n * PT-BR: short format: Jan.\n *\n * @param date\n * @param formatter?: (date: Date, month: Intl.DateTimeFormat) => string, to change the formatting pattern\n * @return an array with month names in short and long format.\n */\n\n\nexports.getMonthShortFormat = function (date, formatter, locale) {\n  var shortFormatter = new Intl.DateTimeFormat(locale !== null && locale !== void 0 ? locale : exports.getUserLocale(), {\n    month: 'short'\n  });\n  return formatter ? string_1.capitalize(formatter(date, shortFormatter)) : string_1.capitalize(shortFormatter.format(date));\n};\n/**\n * Returns month names in short and long format with the first capital letter based on browser's language.\n * EN: short format: Jan | long format: January\n * PT-BR: short format: Jan. | long format: Janeiro\n *\n * @param locale\n * @param formatter?: (date: Date, month: Intl.DateTimeFormat) => string, to change the formatting pattern\n * @return an array with month names in short and long format.\n */\n\n\nfunction getMonthNames(locale, formatter) {\n  var year = new Date().getFullYear();\n  var longFormatter = new Intl.DateTimeFormat(locale, {\n    month: 'long'\n  });\n  var baseDates = Array.from(Array(12)).map(function (_, i) {\n    return new Date(year, i, 1, 0, 0, 0);\n  });\n  return baseDates.map(function (date) {\n    return {\n      short: exports.getMonthShortFormat(date, formatter, locale),\n      long: string_1.capitalize(longFormatter.format(date))\n    };\n  });\n}\n\nexports.getMonthNames = getMonthNames;","map":{"version":3,"sources":["../../src/util/locale.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEa,OAAA,CAAA,cAAA,GAAiB,IAAjB;AAEb;;;;;;AAKa,OAAA,CAAA,aAAA,GAAgB,YAAA;AAC3B,MAAI,OAAO,SAAP,KAAqB,WAAzB,EAAsC;AACpC,WAAO,CAAC,SAAS,CAAC,SAAV,IAAuB,EAAxB,EAA4B,MAA5B,GAAqC,SAAS,CAAC,SAAV,CAAoB,CAApB,CAArC,GAA8D,SAAS,CAAC,QAA/E;AACD;;AAED,SAAO,OAAA,CAAA,cAAP;AACD,CANY;AAQb;;;;;;;;;;;AASa,OAAA,CAAA,mBAAA,GAAsB,UACjC,IADiC,EAEjC,SAFiC,EAGjC,MAHiC,EAGlB;AAEf,MAAM,cAAc,GAAG,IAAI,IAAI,CAAC,cAAT,CAAwB,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GAAU,OAAA,CAAA,aAAA,EAAlC,EAAmD;AAAE,IAAA,KAAK,EAAE;AAAT,GAAnD,CAAvB;AACA,SAAO,SAAS,GAAG,QAAA,CAAA,UAAA,CAAW,SAAS,CAAC,IAAD,EAAO,cAAP,CAApB,CAAH,GAAiD,QAAA,CAAA,UAAA,CAAW,cAAc,CAAC,MAAf,CAAsB,IAAtB,CAAX,CAAjE;AACD,CAPY;AASb;;;;;;;;;;;AASA,SAAgB,aAAhB,CAA8B,MAA9B,EAA8C,SAA9C,EAA4G;AAC1G,MAAM,IAAI,GAAG,IAAI,IAAJ,GAAW,WAAX,EAAb;AAEA,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,cAAT,CAAwB,MAAxB,EAAgC;AAAE,IAAA,KAAK,EAAE;AAAT,GAAhC,CAAtB;AAEA,MAAM,SAAS,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,CAAC,EAAD,CAAhB,EAAsB,GAAtB,CAA0B,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,WAAA,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAAA,CAAA,CAAA;AAA6B,GAAjE,CAAlB;AACA,SAAO,SAAS,CAAC,GAAV,CAAc,UAAC,IAAD,EAAK;AAAK,WAAC;AAC9B,MAAA,KAAK,EAAE,OAAA,CAAA,mBAAA,CAAoB,IAApB,EAA0B,SAA1B,EAAqC,MAArC,CADuB;AAE9B,MAAA,IAAI,EAAE,QAAA,CAAA,UAAA,CAAW,aAAa,CAAC,MAAd,CAAqB,IAArB,CAAX;AAFwB,KAAD;AAG7B,GAHK,CAAP;AAID;;AAVD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMonthNames = exports.getMonthShortFormat = exports.getUserLocale = exports.DEFAULT_LOCALE = void 0;\nvar string_1 = require(\"./string\");\nexports.DEFAULT_LOCALE = 'en';\n/**\n * Return the user locale based on browser's language.\n *\n * @returns The user locale.\n */\nexports.getUserLocale = function () {\n    if (typeof navigator !== 'undefined') {\n        return (navigator.languages || []).length ? navigator.languages[0] : navigator.language;\n    }\n    return exports.DEFAULT_LOCALE;\n};\n/**\n * Returns month in short format with the first capital letter based on browser's language.\n * EN: short format: Jan\n * PT-BR: short format: Jan.\n *\n * @param date\n * @param formatter?: (date: Date, month: Intl.DateTimeFormat) => string, to change the formatting pattern\n * @return an array with month names in short and long format.\n */\nexports.getMonthShortFormat = function (date, formatter, locale) {\n    var shortFormatter = new Intl.DateTimeFormat(locale !== null && locale !== void 0 ? locale : exports.getUserLocale(), { month: 'short' });\n    return formatter ? string_1.capitalize(formatter(date, shortFormatter)) : string_1.capitalize(shortFormatter.format(date));\n};\n/**\n * Returns month names in short and long format with the first capital letter based on browser's language.\n * EN: short format: Jan | long format: January\n * PT-BR: short format: Jan. | long format: Janeiro\n *\n * @param locale\n * @param formatter?: (date: Date, month: Intl.DateTimeFormat) => string, to change the formatting pattern\n * @return an array with month names in short and long format.\n */\nfunction getMonthNames(locale, formatter) {\n    var year = new Date().getFullYear();\n    var longFormatter = new Intl.DateTimeFormat(locale, { month: 'long' });\n    var baseDates = Array.from(Array(12)).map(function (_, i) { return new Date(year, i, 1, 0, 0, 0); });\n    return baseDates.map(function (date) { return ({\n        short: exports.getMonthShortFormat(date, formatter, locale),\n        long: string_1.capitalize(longFormatter.format(date)),\n    }); });\n}\nexports.getMonthNames = getMonthNames;\n//# sourceMappingURL=locale.js.map"]},"metadata":{},"sourceType":"script"}