{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTypography = exports.defaultTypographyConfig = void 0;\n\nvar util_1 = require(\"../../util\");\n\nexports.defaultTypographyConfig = {\n  fontFamily: '\"IBM Plex Sans\", sans-serif',\n  lineHeight: '1.5',\n  sizes: {\n    html: 16,\n    text: '0.8125rem',\n    button: '0.875rem'\n  }\n};\n\nexports.createTypography = function (pallete, customConfig) {\n  var config = util_1.merge({}, exports.defaultTypographyConfig, customConfig);\n  var base = {\n    fontFamily: config.fontFamily,\n    fontSize: config.sizes.text,\n    lineHeight: config.lineHeight,\n    color: pallete.text.main\n  };\n  var variantMap = {\n    main: __assign({}, base),\n    secondary: __assign(__assign({}, base), {\n      color: pallete.text.secondary\n    }),\n    disabled: __assign(__assign({}, base), {\n      color: pallete.text.disabled\n    }),\n    h1: __assign(__assign({}, base), {\n      fontWeight: 'bold',\n      fontSize: '1.5rem'\n    }),\n    h2: __assign(__assign({}, base), {\n      fontWeight: 'bold',\n      fontSize: '1.25rem'\n    }),\n    h3: __assign(__assign({}, base), {\n      fontWeight: 'bold',\n      fontSize: '1rem'\n    }),\n    h4: __assign(__assign({}, base), {\n      fontWeight: 'bold',\n      fontSize: '0.875rem'\n    }),\n    h5: __assign(__assign({}, base), {\n      fontWeight: 'bold',\n      fontSize: '0.8125rem'\n    }),\n    h6: __assign(__assign({}, base), {\n      fontWeight: 'bold',\n      fontSize: '0.75rem'\n    }),\n    link: __assign(__assign({}, base), {\n      color: pallete.primary.main,\n      fontWeight: 'bold',\n      textDecoration: 'underline'\n    })\n  };\n  return __assign(__assign({}, config), {\n    variant: function (variant) {\n      return variantMap[variant];\n    }\n  });\n};","map":{"version":3,"sources":["../../../src/styles/theme/createTypography.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTypography = exports.defaultTypographyConfig = void 0;\nvar util_1 = require(\"../../util\");\nexports.defaultTypographyConfig = {\n    fontFamily: '\"IBM Plex Sans\", sans-serif',\n    lineHeight: '1.5',\n    sizes: {\n        html: 16,\n        text: '0.8125rem',\n        button: '0.875rem',\n    },\n};\nexports.createTypography = function (pallete, customConfig) {\n    var config = util_1.merge({}, exports.defaultTypographyConfig, customConfig);\n    var base = {\n        fontFamily: config.fontFamily,\n        fontSize: config.sizes.text,\n        lineHeight: config.lineHeight,\n        color: pallete.text.main,\n    };\n    var variantMap = {\n        main: __assign({}, base),\n        secondary: __assign(__assign({}, base), { color: pallete.text.secondary }),\n        disabled: __assign(__assign({}, base), { color: pallete.text.disabled }),\n        h1: __assign(__assign({}, base), { fontWeight: 'bold', fontSize: '1.5rem' }),\n        h2: __assign(__assign({}, base), { fontWeight: 'bold', fontSize: '1.25rem' }),\n        h3: __assign(__assign({}, base), { fontWeight: 'bold', fontSize: '1rem' }),\n        h4: __assign(__assign({}, base), { fontWeight: 'bold', fontSize: '0.875rem' }),\n        h5: __assign(__assign({}, base), { fontWeight: 'bold', fontSize: '0.8125rem' }),\n        h6: __assign(__assign({}, base), { fontWeight: 'bold', fontSize: '0.75rem' }),\n        link: __assign(__assign({}, base), { color: pallete.primary.main, fontWeight: 'bold', textDecoration: 'underline' }),\n    };\n    return __assign(__assign({}, config), { variant: function (variant) { return variantMap[variant]; } });\n};\n//# sourceMappingURL=createTypography.js.map"]},"metadata":{},"sourceType":"script"}