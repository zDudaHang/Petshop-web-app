{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.textColorMap = exports.createPallete = exports.defaultConfig = void 0;\n\nvar util_1 = require(\"../../util\");\n\nvar colors_1 = require(\"../colors\");\n\nexports.defaultConfig = {\n  grayScale: colors_1.gray,\n  primaryScale: colors_1.blue,\n  successScale: colors_1.green,\n  dangerScale: colors_1.red,\n  alertScale: colors_1.orange,\n  infoScale: colors_1.blue,\n  highlightScale: colors_1.yellow\n};\n\nexports.createPallete = function (userConfig) {\n  var config = util_1.merge({}, exports.defaultConfig, userConfig);\n  return {\n    gray: config.grayScale,\n    divider: config.grayScale.c80,\n    highlight: config.highlightScale.c80,\n    primary: __assign(__assign({}, config.primaryScale), {\n      main: config.primaryScale.c40\n    }),\n    text: {\n      main: config.grayScale.c10,\n      secondary: config.grayScale.c40,\n      disabled: config.grayScale.c70\n    },\n    surface: {\n      main: config.grayScale.c100,\n      background: config.grayScale.c90\n    },\n    status: {\n      danger: __assign(__assign({}, config.dangerScale), {\n        main: config.dangerScale.c40,\n        background: config.dangerScale.c90,\n        onColor: config.dangerScale.c100\n      }),\n      success: __assign(__assign({}, config.successScale), {\n        main: config.successScale.c40,\n        background: config.successScale.c90,\n        onColor: config.successScale.c100\n      }),\n      info: __assign(__assign({}, config.infoScale), {\n        main: config.infoScale.c40,\n        background: config.infoScale.c90,\n        onColor: config.infoScale.c100\n      }),\n      alert: __assign(__assign({}, config.alertScale), {\n        main: config.alertScale.c40,\n        background: config.alertScale.c90,\n        onColor: config.alertScale.c100\n      })\n    }\n  };\n};\n\nexports.textColorMap = {\n  inherit: function (pallete) {\n    return 'inherit';\n  },\n  normal: function (pallete) {\n    return pallete.text.main;\n  },\n  primary: function (pallete) {\n    return pallete.primary.main;\n  },\n  danger: function (pallete) {\n    return pallete.status.danger.main;\n  },\n  success: function (pallete) {\n    return pallete.status.success.main;\n  },\n  info: function (pallete) {\n    return pallete.status.info.main;\n  },\n  alert: function (pallete) {\n    return pallete.status.alert.main;\n  },\n  secondary: function (pallete) {\n    return pallete.text.secondary;\n  },\n  disabled: function (pallete) {\n    return pallete.text.disabled;\n  }\n};","map":{"version":3,"sources":["../../../src/styles/theme/createPallete.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.textColorMap = exports.createPallete = exports.defaultConfig = void 0;\nvar util_1 = require(\"../../util\");\nvar colors_1 = require(\"../colors\");\nexports.defaultConfig = {\n    grayScale: colors_1.gray,\n    primaryScale: colors_1.blue,\n    successScale: colors_1.green,\n    dangerScale: colors_1.red,\n    alertScale: colors_1.orange,\n    infoScale: colors_1.blue,\n    highlightScale: colors_1.yellow,\n};\nexports.createPallete = function (userConfig) {\n    var config = util_1.merge({}, exports.defaultConfig, userConfig);\n    return {\n        gray: config.grayScale,\n        divider: config.grayScale.c80,\n        highlight: config.highlightScale.c80,\n        primary: __assign(__assign({}, config.primaryScale), { main: config.primaryScale.c40 }),\n        text: {\n            main: config.grayScale.c10,\n            secondary: config.grayScale.c40,\n            disabled: config.grayScale.c70,\n        },\n        surface: {\n            main: config.grayScale.c100,\n            background: config.grayScale.c90,\n        },\n        status: {\n            danger: __assign(__assign({}, config.dangerScale), { main: config.dangerScale.c40, background: config.dangerScale.c90, onColor: config.dangerScale.c100 }),\n            success: __assign(__assign({}, config.successScale), { main: config.successScale.c40, background: config.successScale.c90, onColor: config.successScale.c100 }),\n            info: __assign(__assign({}, config.infoScale), { main: config.infoScale.c40, background: config.infoScale.c90, onColor: config.infoScale.c100 }),\n            alert: __assign(__assign({}, config.alertScale), { main: config.alertScale.c40, background: config.alertScale.c90, onColor: config.alertScale.c100 }),\n        },\n    };\n};\nexports.textColorMap = {\n    inherit: function (pallete) { return 'inherit'; },\n    normal: function (pallete) { return pallete.text.main; },\n    primary: function (pallete) { return pallete.primary.main; },\n    danger: function (pallete) { return pallete.status.danger.main; },\n    success: function (pallete) { return pallete.status.success.main; },\n    info: function (pallete) { return pallete.status.info.main; },\n    alert: function (pallete) { return pallete.status.alert.main; },\n    secondary: function (pallete) { return pallete.text.secondary; },\n    disabled: function (pallete) { return pallete.text.disabled; },\n};\n//# sourceMappingURL=createPallete.js.map"]},"metadata":{},"sourceType":"script"}