{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/Vet/AddApointmentView.tsx\";\nimport React from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { css } from \"@emotion/core\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form } from \"react-final-form\";\nimport { PETS, VETS } from \"../../../graphql/queries\";\nimport { generateValidHours } from \"../../../util/util\";\nimport { DatePickerAdapter, SelectAdapter } from \"../../Adapters\";\nimport { LoadingView } from \"../../Infos/LoadingView\";\nimport { ADD_APPOINTMENT } from \"../../../graphql/mutations\";\nexport function AddApointmentView() {\n  const {\n    loading: loadingVets,\n    data: vets\n  } = useQuery(VETS);\n  const {\n    loading: loadingPets,\n    data: pets\n  } = useQuery(PETS);\n  const [newAppointment, {\n    data: appointment\n  }] = useMutation(ADD_APPOINTMENT);\n\n  if (loadingVets) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      msg: \"Carregando os veterin\\xE1rios...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (loadingPets) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      msg: \"Carregando os pets...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    });\n  }\n\n  function handleSubmit({\n    date,\n    time,\n    vet,\n    pet\n  }) {\n    newAppointment({\n      variables: {\n        userId: vet.id,\n        petId: pet.id,\n        date: date,\n        time: time\n      }\n    });\n  }\n\n  function itemToString(item) {\n    return item ? `${item.name}` : \"\";\n  }\n\n  const renderForm = props => {\n    const {\n      errors,\n      handleSubmit,\n      form: {\n        reset\n      }\n    } = props;\n    return /*#__PURE__*/React.createElement(VFlow, {\n      vSpacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, (appointment === null || appointment === void 0 ? void 0 : appointment.newAppointment) && /*#__PURE__*/React.createElement(Alert, {\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Consulta adicionada com sucesso !\"), /*#__PURE__*/React.createElement(Heading, {\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Adicionando uma nova consulta\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      wrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: DatePickerAdapter,\n      name: \"date\",\n      label: \"Data da consulta\",\n      required: true,\n      error: errors.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: SelectAdapter,\n      name: \"time\",\n      label: \"Hor\\xE1rio da consulta\",\n      items: generateValidHours(),\n      itemsToString: item => item,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: SelectAdapter,\n      name: \"vet\",\n      label: \"Veterin\\xE1rio\",\n      items: vets === null || vets === void 0 ? void 0 : vets.vets,\n      itemToString: itemToString,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: SelectAdapter,\n      name: \"pet\",\n      label: \"Pet\",\n      items: pets === null || pets === void 0 ? void 0 : pets.pets,\n      itemToString: itemToString,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(HFlow, {\n      justifyContent: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"reset\",\n      kind: \"normal\",\n      size: \"small\",\n      onClick: reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"Limpar\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      kind: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, \"Enviar\"))))));\n  };\n\n  return /*#__PURE__*/React.createElement(HFlow, {\n    style: css`margin: 1rem`,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: renderForm,\n    validate: values => {\n      const errors = {\n        date: undefined\n      };\n\n      if (values.date < new Date(new Date().toDateString())) {\n        errors.date = 'A data precisa ser a partir de hoje';\n      }\n\n      return errors;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/User/Vet/AddApointmentView.tsx"],"names":["React","useMutation","useQuery","css","Alert","Button","Cell","Grid","Heading","HFlow","VFlow","Field","Form","PETS","VETS","generateValidHours","DatePickerAdapter","SelectAdapter","LoadingView","ADD_APPOINTMENT","AddApointmentView","loading","loadingVets","data","vets","loadingPets","pets","newAppointment","appointment","handleSubmit","date","time","vet","pet","variables","userId","id","petId","itemToString","item","name","renderForm","props","errors","form","reset","values","undefined","Date","toDateString"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { css } from \"@emotion/core\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form, FormRenderProps } from \"react-final-form\";\nimport { PETS, VETS } from \"../../../graphql/queries\";\nimport { PetsResult } from \"../../../types/Pet\";\nimport { VetsResult } from \"../../../types/User\";\nimport { generateValidHours } from \"../../../util/util\";\nimport { DatePickerAdapter, SelectAdapter } from \"../../Adapters\";\nimport { LoadingView } from \"../../Infos/LoadingView\";\nimport { CreateAppointmentResult } from \"../../../types/Appointment\";\nimport { ADD_APPOINTMENT } from \"../../../graphql/mutations\";\n\nexport function AddApointmentView() {\n\n    const { loading:loadingVets, data:vets } = useQuery<VetsResult>(VETS);\n\n    const { loading:loadingPets, data:pets } = useQuery<PetsResult>(PETS);\n\n    const [newAppointment, {data:appointment}] = useMutation<CreateAppointmentResult>(ADD_APPOINTMENT);\n\n    if (loadingVets) {\n        return <LoadingView msg=\"Carregando os veterinários...\"/>\n    }\n\n    if (loadingPets) {\n        return <LoadingView msg=\"Carregando os pets...\"/>\n    }\n\n    function handleSubmit({date, time, vet, pet}: any) {\n        newAppointment({variables: {\n            userId: vet.id,\n            petId: pet.id,\n            date: date,\n            time: time\n        }})\n    }\n\n    function itemToString(item: any) {\n        return item ? `${item.name}` : \"\"\n    }\n\n    const renderForm = (props: FormRenderProps) => {\n\n        const {errors, handleSubmit, form: { reset }} = props\n\n        return (\n            <VFlow vSpacing={1}>\n                {appointment?.newAppointment &&\n                    <Alert type='success'>\n                        Consulta adicionada com sucesso !\n                    </Alert>\n                }\n                <Heading level={1}>\n                    Adicionando uma nova consulta\n                </Heading>\n                <form onSubmit={handleSubmit}>\n                    <Grid wrap>\n                        <Cell xs={6}>\n                            <Field\n                                component={DatePickerAdapter}\n                                name=\"date\"\n                                label=\"Data da consulta\"\n                                required\n                                error={errors.date}\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={SelectAdapter}\n                                name=\"time\"\n                                label=\"Horário da consulta\"\n                                items={generateValidHours()}\n                                itemsToString={(item: string) => item}\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={SelectAdapter}\n                                name=\"vet\"\n                                label=\"Veterinário\" \n                                items={vets?.vets}\n                                itemToString={itemToString}\n                                required\n                            />\n                            </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={SelectAdapter}\n                                name=\"pet\"\n                                label=\"Pet\" \n                                items={pets?.pets}\n                                itemToString={itemToString}\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={12}>\n                            <HFlow justifyContent=\"flex-start\">\n                                <Button type=\"reset\" kind=\"normal\" size=\"small\" onClick={reset}>\n                                    Limpar\n                                </Button>\n                                <Button type=\"submit\" kind=\"primary\" size=\"small\">\n                                    Enviar\n                                </Button>\n                            </HFlow>\n                        </Cell>\n                    </Grid>\n                </form>\n            </VFlow>\n        )\n    }\n\n    return (\n        <HFlow style={css`margin: 1rem`} justifyContent=\"center\">\n            <Form\n                onSubmit={handleSubmit}\n                render={renderForm}\n                validate={values => {\n                    const errors: {date: String | undefined} = {date: undefined}\n                    if (values.date < new Date(new Date().toDateString())) {\n                        errors.date = 'A data precisa ser a partir de hoje'\n                    }\n                    return errors;\n                }}\n            />\n        </HFlow>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}