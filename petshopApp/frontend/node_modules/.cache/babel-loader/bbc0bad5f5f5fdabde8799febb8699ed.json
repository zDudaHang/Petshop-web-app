{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Customer/CreateCustomerView.tsx\";\nimport React from \"react\";\nimport { useMutation } from '@apollo/client';\nimport { CREATE_CUSTOMER } from \"../../graphql/mutations\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form } from \"react-final-form\";\nimport { css } from \"@emotion/core\";\nimport { MaskedTextFieldAdapter, TextFieldAdapter } from \"../Adapters\";\nexport function CreateCustomerView() {\n  const [newCustomer, {\n    data: customer\n  }] = useMutation(CREATE_CUSTOMER);\n\n  function handleSubmit({\n    name,\n    birthdate\n  }) {\n    newCustomer({\n      variables: {\n        name: name,\n        birthDate: birthdate\n      }\n    });\n  }\n\n  const renderForm = props => {\n    return /*#__PURE__*/React.createElement(VFlow, {\n      vSpacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, (customer === null || customer === void 0 ? void 0 : customer.newCustomer) && /*#__PURE__*/React.createElement(Alert, {\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"Cliente criado com sucesso !\"), /*#__PURE__*/React.createElement(Heading, {\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Adicionando um novo cliente\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      wrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: TextFieldAdapter,\n      name: \"name\",\n      label: \"Nome\",\n      placeholder: \"Nome do cliente\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: MaskedTextFieldAdapter,\n      name: \"birthdate\",\n      guide: true,\n      required: true,\n      label: \"Data de Anivers\\xE1rio\",\n      mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/],\n      placeholder: \"dd/mm/aaaa\",\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Cell, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(HFlow, {\n      justifyContent: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"reset\",\n      kind: \"normal\",\n      size: \"small\",\n      onClick: props.form.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, \"Limpar\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      kind: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, \"Enviar\"))))));\n  };\n\n  return /*#__PURE__*/React.createElement(HFlow, {\n    style: css`margin: 1rem`,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: renderForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Customer/CreateCustomerView.tsx"],"names":["React","useMutation","CREATE_CUSTOMER","Alert","Button","Cell","Grid","Heading","HFlow","VFlow","Field","Form","css","MaskedTextFieldAdapter","TextFieldAdapter","CreateCustomerView","newCustomer","data","customer","handleSubmit","name","birthdate","variables","birthDate","renderForm","props","form","reset"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useMutation } from '@apollo/client';\nimport { CreateCustomerResult } from \"../../types/Customer\";\nimport { CREATE_CUSTOMER } from \"../../graphql/mutations\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { Field, Form, FormRenderProps } from \"react-final-form\";\nimport { css } from \"@emotion/core\";\nimport { MaskedTextFieldAdapter, TextFieldAdapter } from \"../Adapters\";\n\nexport function CreateCustomerView() {\n\n    const [newCustomer, {data:customer}] = useMutation<CreateCustomerResult>(CREATE_CUSTOMER)\n\n    function handleSubmit({name, birthdate}: any) {\n        newCustomer({variables: {\n            name: name, birthDate: birthdate\n        }});\n    }\n\n    const renderForm = (props: FormRenderProps) => {\n        return (\n            <VFlow vSpacing={1}>\n                {customer?.newCustomer &&\n                    <Alert type='success'>\n                        Cliente criado com sucesso !\n                    </Alert>\n                }\n                <Heading level={1}>\n                    Adicionando um novo cliente\n                </Heading>\n                <form onSubmit={props.handleSubmit}>\n                    <Grid wrap>\n                        <Cell xs={6}>\n                            <Field\n                                component={TextFieldAdapter}\n                                name=\"name\"\n                                label=\"Nome\"\n                                placeholder=\"Nome do cliente\"\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={MaskedTextFieldAdapter}\n                                name=\"birthdate\"\n                                guide\n                                required\n                                label=\"Data de AniversÃ¡rio\" \n                                mask={[/\\d/,/\\d/,'/',/\\d/,/\\d/,'/',/\\d/,/\\d/,/\\d/,/\\d/]}\n                                placeholder=\"dd/mm/aaaa\"\n                                disabled={false}\n                            />\n                        </Cell>\n                        <Cell xs={12}>\n                            <HFlow justifyContent=\"flex-start\">\n                                <Button type=\"reset\" kind=\"normal\" size=\"small\" onClick={props.form.reset}>\n                                    Limpar\n                                </Button>\n                                <Button type=\"submit\" kind=\"primary\" size=\"small\">\n                                    Enviar\n                                </Button>\n                            </HFlow>\n                        </Cell>\n                    </Grid>\n                </form>\n            </VFlow>\n        )\n    }\n\n    return (\n        <HFlow style={css`margin: 1rem`} justifyContent=\"center\">\n            <Form\n                onSubmit={handleSubmit}\n                render={renderForm}\n            />\n        </HFlow>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}