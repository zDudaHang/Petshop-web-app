{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/SearchCustomerView.tsx\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useLazyQuery } from '@apollo/client';\nimport React, { useContext, useEffect, useState } from 'react'; //  QUERIES:\n\nimport { CUSTOMERS_BY_NAME_LIKE } from '../graphql/queries';\nimport { TableCustomerView } from './Customer/TableCustomerView';\nimport { VFlow, TextField, HFlow, Table, TableHead, TableHeader, TableRow, TableBody } from 'bold-ui';\nimport AuthContext from '../AuthContext';\nlet timeout;\nexport function SearchCustomerView() {\n  const {\n    user\n  } = useContext(AuthContext);\n  const [findCustomers, {\n    data: customers\n  }] = useLazyQuery(CUSTOMERS_BY_NAME_LIKE, {\n    fetchPolicy: 'network-only'\n  });\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    findCustomers({\n      variables: {\n        name: text\n      }\n    });\n  }, [findCustomers, text]);\n\n  const handleChange = e => {\n    const value = e.currentTarget.value;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      setText(value);\n    }, 200);\n  };\n\n  return jsx(VFlow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, jsx(HFlow, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    style: css`margin-top: 1rem`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, jsx(TextField, {\n    icon: \"zoomOutline\",\n    label: \"Digite um nome\",\n    placeholder: \"Nome\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })), jsx(HFlow, {\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, jsx(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, \"ID\"), jsx(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, \"Nome\"), jsx(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, \"Data de nascimento\"), user.isAdmin && jsx(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 51\n    }\n  }, \"A pagar\"), jsx(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }))), jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, customers === null || customers === void 0 ? void 0 : customers.customersByNameLike.map(c => {\n    return jsx(TableCustomerView, {\n      key: c.id,\n      customer: c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    });\n  })))));\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/SearchCustomerView.tsx"],"names":["css","jsx","useLazyQuery","React","useContext","useEffect","useState","CUSTOMERS_BY_NAME_LIKE","TableCustomerView","VFlow","TextField","HFlow","Table","TableHead","TableHeader","TableRow","TableBody","AuthContext","timeout","SearchCustomerView","user","findCustomers","data","customers","fetchPolicy","text","setText","variables","name","handleChange","e","value","currentTarget","clearTimeout","setTimeout","isAdmin","customersByNameLike","map","c","id"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport { useLazyQuery } from '@apollo/client';\nimport React, { useContext, useEffect, useState } from 'react';\n\n//  QUERIES:\nimport { CUSTOMERS_BY_NAME_LIKE} from '../graphql/queries';\nimport { CustomersByNameLikeResult } from '../types/Customer';\nimport { TableCustomerView } from './Customer/TableCustomerView';\n\nimport { VFlow, TextField, HFlow, Table, TableHead, TableHeader, TableRow, TableBody } from 'bold-ui';\nimport AuthContext from '../AuthContext';\n\nlet timeout: NodeJS.Timeout;\n\nexport function SearchCustomerView() {\n\n    const {user} = useContext(AuthContext);\n\n    const [ findCustomers, { data:customers} ] = useLazyQuery<CustomersByNameLikeResult>(CUSTOMERS_BY_NAME_LIKE, {\n        fetchPolicy: 'network-only'\n    });\n\n    const [ text, setText ] = useState(\"\");\n\n    useEffect(() => {\n        findCustomers({variables: {name: text}})\n    }, [findCustomers, text]);\n\n    const handleChange= (e:  React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.currentTarget.value;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {setText(value)}, 200);\n    }\n\n    return (\n            <VFlow >\n                <HFlow alignItems=\"center\" justifyContent=\"center\" style={css`margin-top: 1rem`}>\n                    <TextField icon=\"zoomOutline\" label=\"Digite um nome\" placeholder=\"Nome\" onChange={handleChange}/>\n                </HFlow>\n                <HFlow alignItems=\"flex-start\" justifyContent=\"center\">\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableHeader>ID</TableHeader>\n                                <TableHeader>Nome</TableHeader>\n                                <TableHeader>Data de nascimento</TableHeader>\n                                {user!.isAdmin && <TableHeader>A pagar</TableHeader>}\n                                <TableHeader></TableHeader>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {customers?.customersByNameLike.map( (c) => {\n                                return (\n                                    <TableCustomerView key={c.id} customer={c}/>\n                                )\n                            }) }\n                        </TableBody>\n                    </Table>\n                    </HFlow>\n            </VFlow>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}