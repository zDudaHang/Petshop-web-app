{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStepProps = exports.useStepperState = void 0;\n\nvar react_1 = require(\"react\");\n\nfunction useStepperState(initialCurrStep) {\n  if (initialCurrStep === void 0) {\n    initialCurrStep = 0;\n  }\n\n  var _a = react_1.useState(initialCurrStep),\n      currentStep = _a[0],\n      setCurrentStep = _a[1];\n\n  var nextStep = function () {\n    return setCurrentStep(function (step) {\n      return step + 1;\n    });\n  };\n\n  var previousStep = function () {\n    return setCurrentStep(function (step) {\n      return step - 1;\n    });\n  };\n\n  return {\n    getStepProps: function (step) {\n      return getStepProps(step, currentStep);\n    },\n    currentStep: currentStep,\n    setCurrentStep: setCurrentStep,\n    nextStep: nextStep,\n    previousStep: previousStep\n  };\n}\n\nexports.useStepperState = useStepperState;\n/**\n * Create a StepProps properties object to pass to a Step component, based on its index and current Stepper state.\n *\n * @param step The step index that will receive the props.\n * @param currentActiveStep The current active stepper step.\n */\n\nfunction getStepProps(step, currentActiveStep) {\n  return {\n    status: step < currentActiveStep && 'completed' || step > currentActiveStep && 'incompleted' || 'active',\n    hasConnector: step > 0\n  };\n}\n\nexports.getStepProps = getStepProps;","map":{"version":3,"sources":["../../../src/components/Stepper/useStepperState.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAIA,SAAgB,eAAhB,CAAgC,eAAhC,EAAmD;AAAnB,MAAA,eAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAmB;;AAC3C,MAAA,EAAA,GAAgC,OAAA,CAAA,QAAA,CAAS,eAAT,CAAhC;AAAA,MAAC,WAAW,GAAA,EAAA,CAAA,CAAA,CAAZ;AAAA,MAAc,cAAc,GAAA,EAAA,CAAA,CAAA,CAA5B;;AAEN,MAAM,QAAQ,GAAG,YAAA;AAAM,WAAA,cAAc,CAAC,UAAA,IAAA,EAAI;AAAI,aAAA,IAAI,GAAJ,CAAA;AAAvB,KAAc,CAAd;AAAgC,GAAvD;;AACA,MAAM,YAAY,GAAG,YAAA;AAAM,WAAA,cAAc,CAAC,UAAA,IAAA,EAAI;AAAI,aAAA,IAAI,GAAJ,CAAA;AAAvB,KAAc,CAAd;AAAgC,GAA3D;;AAEA,SAAO;AACL,IAAA,YAAY,EAAE,UAAC,IAAD,EAAa;AAAK,aAAA,YAAY,CAAC,IAAD,EAAZ,WAAY,CAAZ;AAA+B,KAD1D;AAEL,IAAA,WAAW,EAAA,WAFN;AAGL,IAAA,cAAc,EAAA,cAHT;AAIL,IAAA,QAAQ,EAAA,QAJH;AAKL,IAAA,YAAY,EAAA;AALP,GAAP;AAOD;;AAbD,OAAA,CAAA,eAAA,GAAA,eAAA;AAeA;;;;;;;AAMA,SAAgB,YAAhB,CAA6B,IAA7B,EAA2C,iBAA3C,EAAoE;AAClE,SAAO;AACL,IAAA,MAAM,EAAG,IAAI,GAAG,iBAAP,IAA4B,WAA7B,IAA8C,IAAI,GAAG,iBAAP,IAA4B,aAA1E,IAA4F,QAD/F;AAEL,IAAA,YAAY,EAAE,IAAI,GAAG;AAFhB,GAAP;AAID;;AALD,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getStepProps = exports.useStepperState = void 0;\nvar react_1 = require(\"react\");\nfunction useStepperState(initialCurrStep) {\n    if (initialCurrStep === void 0) { initialCurrStep = 0; }\n    var _a = react_1.useState(initialCurrStep), currentStep = _a[0], setCurrentStep = _a[1];\n    var nextStep = function () { return setCurrentStep(function (step) { return step + 1; }); };\n    var previousStep = function () { return setCurrentStep(function (step) { return step - 1; }); };\n    return {\n        getStepProps: function (step) { return getStepProps(step, currentStep); },\n        currentStep: currentStep,\n        setCurrentStep: setCurrentStep,\n        nextStep: nextStep,\n        previousStep: previousStep,\n    };\n}\nexports.useStepperState = useStepperState;\n/**\n * Create a StepProps properties object to pass to a Step component, based on its index and current Stepper state.\n *\n * @param step The step index that will receive the props.\n * @param currentActiveStep The current active stepper step.\n */\nfunction getStepProps(step, currentActiveStep) {\n    return {\n        status: (step < currentActiveStep && 'completed') || (step > currentActiveStep && 'incompleted') || 'active',\n        hasConnector: step > 0,\n    };\n}\nexports.getStepProps = getStepProps;\n//# sourceMappingURL=useStepperState.js.map"]},"metadata":{},"sourceType":"script"}