{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/CreatePetView.tsx\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_PET } from \"../../graphql/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CUSTOMER, SPECIES } from \"../../graphql/queries\";\nimport { Field, Form } from \"react-final-form\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { MaskedTextFieldAdapter, SelectAdapter, TextFieldAdapter } from '../Adapters';\nimport { ErrorView } from '../Infos/ErrorView';\nimport { LoadingView } from '../Infos/LoadingView';\nexport function CreatePetView() {\n  const {\n    ownerId\n  } = useParams();\n  const {\n    loading: loadingOwner,\n    data: owner\n  } = useQuery(CUSTOMER, {\n    variables: {\n      id: ownerId\n    }\n  });\n  const {\n    loading: loadingSpecies,\n    data: species\n  } = useQuery(SPECIES);\n  const [newPet, {\n    data: pet\n  }] = useMutation(CREATE_PET);\n\n  if (loadingOwner) {\n    return jsx(LoadingView, {\n      msg: \"Carregando os dados do dono...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (loadingSpecies) {\n    return jsx(LoadingView, {\n      msg: \"Carregando as esp\\xE9cies...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    });\n  }\n\n  function handleSubmit({\n    name,\n    birthdate,\n    species\n  }) {\n    if (species) {\n      newPet({\n        variables: {\n          name: name,\n          birthDate: birthdate,\n          ownerId: ownerId,\n          speciesId: species.id\n        }\n      });\n    }\n  }\n\n  function itemToString(item) {\n    return item ? `${item.name}` : \"\";\n  }\n\n  const renderForm = props => {\n    return jsx(VFlow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, (pet === null || pet === void 0 ? void 0 : pet.newPet) && jsx(Alert, {\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Pet criado com sucesso !\"), jsx(Heading, {\n      level: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Criando um pet para o(a) \", owner === null || owner === void 0 ? void 0 : owner.customer.name), jsx(\"form\", {\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, jsx(Grid, {\n      wrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, jsx(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, jsx(Field, {\n      component: TextFieldAdapter,\n      name: \"name\",\n      label: \"Nome\",\n      placeholder: \"Nome do Pet\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    })), jsx(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, jsx(Field, {\n      component: MaskedTextFieldAdapter,\n      name: \"birthdate\",\n      guide: true,\n      required: true,\n      label: \"Data de Anivers\\xE1rio\",\n      mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/],\n      placeholder: \"dd/mm/aaaa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    })), jsx(Cell, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, jsx(Field, {\n      component: SelectAdapter,\n      name: \"species\",\n      label: \"Escolha uma esp\\xE9cie\",\n      items: species === null || species === void 0 ? void 0 : species.allSpecies,\n      itemToString: itemToString,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    })), jsx(Cell, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, jsx(HFlow, {\n      justifyContent: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, jsx(Button, {\n      type: \"reset\",\n      kind: \"normal\",\n      size: \"small\",\n      onClick: props.form.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, \"Limpar\"), jsx(Button, {\n      type: \"submit\",\n      kind: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, \"Enviar\"))))));\n  };\n\n  return jsx(HFlow, {\n    style: css`margin: 1rem`,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, owner ? jsx(Form, {\n    onSubmit: handleSubmit,\n    render: renderForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }) : jsx(ErrorView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/Pet/CreatePetView.tsx"],"names":["css","jsx","useMutation","CREATE_PET","useParams","useQuery","CUSTOMER","SPECIES","Field","Form","Alert","Button","Cell","Grid","Heading","HFlow","VFlow","MaskedTextFieldAdapter","SelectAdapter","TextFieldAdapter","ErrorView","LoadingView","CreatePetView","ownerId","loading","loadingOwner","data","owner","variables","id","loadingSpecies","species","newPet","pet","handleSubmit","name","birthdate","birthDate","speciesId","itemToString","item","renderForm","props","customer","allSpecies","form","reset"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport { useMutation } from '@apollo/client';\nimport { CREATE_PET } from \"../../graphql/mutations\";\nimport { CreatePetResult } from \"../../types/Pet\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CustomerResult } from \"../../types/Customer\";\nimport { CUSTOMER, SPECIES } from \"../../graphql/queries\";\nimport { Field, Form, FormRenderProps } from \"react-final-form\";\nimport { Alert, Button, Cell, Grid, Heading, HFlow, VFlow } from \"bold-ui\";\nimport { MaskedTextFieldAdapter, SelectAdapter, TextFieldAdapter } from '../Adapters';\nimport { ErrorView } from '../Infos/ErrorView';\nimport { SpeciesResult } from '../../types/Species';\nimport { LoadingView } from '../Infos/LoadingView';\n\nexport function CreatePetView() {\n\n    const {ownerId} = useParams<{ownerId: string}>();\n\n    const {loading:loadingOwner, data:owner} = useQuery<CustomerResult>(CUSTOMER, {\n        variables: { id: ownerId }\n    })\n\n    const {loading:loadingSpecies, data:species} = useQuery<SpeciesResult>(SPECIES);\n\n    const [newPet, {data:pet}] = useMutation<CreatePetResult>(CREATE_PET);\n\n    if (loadingOwner) {\n        return <LoadingView msg=\"Carregando os dados do dono...\"/>\n    }\n\n    if (loadingSpecies) {\n        return <LoadingView msg=\"Carregando as espécies...\"/>\n    }\n\n    function handleSubmit({name, birthdate, species}: any) {\n        if (species) {\n            newPet({variables: {name: name, birthDate: birthdate, ownerId: ownerId, speciesId: species.id}})\n        }\n    }\n\n    function itemToString(item: any) {\n        return item ? `${item.name}` : \"\"\n    }\n\n    const renderForm = (props: FormRenderProps) => {\n        return (\n            <VFlow>\n                {pet?.newPet &&\n                    <Alert type='success'>\n                        Pet criado com sucesso !\n                    </Alert>\n                }\n                <Heading level={1}>\n                    Criando um pet para o(a) {owner?.customer.name}\n                </Heading>\n                <form onSubmit={props.handleSubmit}>\n                    <Grid wrap>\n                        <Cell xs={6}>\n                            <Field\n                                component={TextFieldAdapter}\n                                name=\"name\"\n                                label=\"Nome\"\n                                placeholder=\"Nome do Pet\"\n                                required\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={MaskedTextFieldAdapter}\n                                name=\"birthdate\"\n                                guide\n                                required\n                                label=\"Data de Aniversário\" \n                                mask={[/\\d/,/\\d/,'/',/\\d/,/\\d/,'/',/\\d/,/\\d/,/\\d/,/\\d/]}\n                                placeholder=\"dd/mm/aaaa\"\n                            />\n                        </Cell>\n                        <Cell xs={6}>\n                            <Field\n                                component={SelectAdapter}\n                                name=\"species\"\n                                label=\"Escolha uma espécie\"\n                                items={species?.allSpecies}\n                                itemToString={itemToString}\n                            />\n                        </Cell>\n                        <Cell xs={12}>\n                            <HFlow justifyContent=\"flex-start\">\n                                <Button type=\"reset\" kind=\"normal\" size=\"small\" onClick={props.form.reset}>\n                                    Limpar\n                                </Button>\n                                <Button type=\"submit\" kind=\"primary\" size=\"small\">\n                                    Enviar\n                                </Button>\n                            </HFlow>\n                        </Cell>\n                    </Grid>\n                </form>\n            </VFlow>\n        )\n    }\n        \n    return (        \n        <HFlow style={css`margin: 1rem`} justifyContent=\"center\">\n            {owner  ? \n                <Form\n                    onSubmit={handleSubmit}\n                    render={renderForm}/>\n            :\n                <ErrorView/>\n            }\n        </HFlow>\n        );\n}"]},"metadata":{},"sourceType":"module"}