{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/SearchPetView.tsx\";\nimport { useLazyQuery } from '@apollo/client';\nimport React, { useEffect, useState } from 'react'; //  QUERIES:\n\nimport { PETS_BY_NAME_LIKE } from '../graphql/queries';\nimport { PetView } from './Pet/PetView';\nimport { VFlow, TextField, HFlow, Table, TableHead, TableHeader, TableRow, TableBody } from 'bold-ui';\nimport { css } from '@emotion/core';\nlet timeout;\nexport function SearchPetView() {\n  const [findPets, {\n    data: pets\n  }] = useLazyQuery(PETS_BY_NAME_LIKE, {\n    fetchPolicy: 'network-only'\n  });\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    findPets({\n      variables: {\n        name: text\n      }\n    });\n  }, [findPets, text]);\n\n  const handleChange = e => {\n    const value = e.currentTarget.value;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      setText(value);\n    }, 200);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VFlow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HFlow, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    style: css`margin-top: 1rem`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    icon: \"zoomOutline\",\n    label: \"Digite um nome\",\n    placeholder: \"Nome\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HFlow, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, \"Data de nascimento\"), /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, \"Esp\\xE9cie\"), /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, pets === null || pets === void 0 ? void 0 : pets.petsByNameLike.map(p => {\n    return /*#__PURE__*/React.createElement(PetView, {\n      key: p.id,\n      pet: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    });\n  }))))));\n}","map":{"version":3,"sources":["/home/bridge/Petshop-web-app/petshopApp/frontend/src/components/SearchPetView.tsx"],"names":["useLazyQuery","React","useEffect","useState","PETS_BY_NAME_LIKE","PetView","VFlow","TextField","HFlow","Table","TableHead","TableHeader","TableRow","TableBody","css","timeout","SearchPetView","findPets","data","pets","fetchPolicy","text","setText","variables","name","handleChange","e","value","currentTarget","clearTimeout","setTimeout","petsByNameLike","map","p","id"],"mappings":"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","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\n\n//  QUERIES:\nimport { PETS_BY_NAME_LIKE } from '../graphql/queries';\nimport { PetsByNameLikeResult } from '../types/Pet';\nimport { PetView } from './Pet/PetView';\n\nimport { VFlow, TextField, HFlow, Table, TableHead, TableHeader, TableRow, TableBody } from 'bold-ui';\nimport { css } from '@emotion/core';\n\nlet timeout: NodeJS.Timeout;\n\nexport function SearchPetView() {\n\n    const [ findPets, { data:pets} ] = useLazyQuery<PetsByNameLikeResult>(PETS_BY_NAME_LIKE, {\n        fetchPolicy: 'network-only'\n    });\n\n    const [ text, setText ] = useState(\"\");\n\n    useEffect(() => {\n        findPets({variables: {name: text}})\n    }, [findPets, text]);\n\n    const handleChange= (e:  React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.currentTarget.value;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {setText(value)}, 200);\n    }\n\n    return (\n        <>\n            <VFlow >\n                <HFlow alignItems=\"center\" justifyContent=\"center\" style={css`margin-top: 1rem`}>\n                    <TextField icon=\"zoomOutline\" label=\"Digite um nome\" placeholder=\"Nome\" onChange={handleChange}/>\n                </HFlow>\n                <HFlow alignItems=\"center\" justifyContent=\"center\">\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableHeader>ID</TableHeader>\n                                    <TableHeader>Nome</TableHeader>\n                                    <TableHeader>Data de nascimento</TableHeader>\n                                    <TableHeader>Esp√©cie</TableHeader>\n                                    <TableHeader></TableHeader>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {pets?.petsByNameLike.map((p) => {\n                                    return (\n                                        <PetView key={p.id} pet={p}/>\n                                    )\n                                })}\n                            </TableBody>\n                        </Table>\n                    </HFlow>\n            </VFlow>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}